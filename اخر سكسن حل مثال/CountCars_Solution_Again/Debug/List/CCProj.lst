
AVRASM ver. 2.1.30  G:\Embedded Systems Courses\Atmega AVR\Embedded Systems\Sections\CountCars_Solution_Again\Debug\List\CCProj.asm Thu Dec 02 13:34:20 2021

G:\Embedded Systems Courses\Atmega AVR\Embedded Systems\Sections\CountCars_Solution_Again\Debug\List\CCProj.asm(1414): warning: Register r5 already defined by the .DEF directive
G:\Embedded Systems Courses\Atmega AVR\Embedded Systems\Sections\CountCars_Solution_Again\Debug\List\CCProj.asm(1415): warning: Register r4 already defined by the .DEF directive
G:\Embedded Systems Courses\Atmega AVR\Embedded Systems\Sections\CountCars_Solution_Again\Debug\List\CCProj.asm(1416): warning: Register r7 already defined by the .DEF directive
G:\Embedded Systems Courses\Atmega AVR\Embedded Systems\Sections\CountCars_Solution_Again\Debug\List\CCProj.asm(1417): warning: Register r6 already defined by the .DEF directive
G:\Embedded Systems Courses\Atmega AVR\Embedded Systems\Sections\CountCars_Solution_Again\Debug\List\CCProj.asm(1418): warning: Register r9 already defined by the .DEF directive
G:\Embedded Systems Courses\Atmega AVR\Embedded Systems\Sections\CountCars_Solution_Again\Debug\List\CCProj.asm(1419): warning: Register r8 already defined by the .DEF directive
G:\Embedded Systems Courses\Atmega AVR\Embedded Systems\Sections\CountCars_Solution_Again\Debug\List\CCProj.asm(1420): warning: Register r11 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.46a 
                 ;(C) Copyright 1998-2021 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _secs=R5
                 	.DEF _mins=R4
                 	.DEF _hours=R7
                 	.DEF _operation=R6
                 	.DEF __lcd_x=R9
                 	.DEF __lcd_y=R8
                 	.DEF __lcd_maxx=R11
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 005d 	JMP  __RESET
000002 940c 00b3 	JMP  _ext_int0
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 00c6 	JMP  _T2_OV
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000033 0000
000034 0000      	.DB  0x0,0x0,0x0,0x0
                 
                 _0x0:
000035 7250
000036 7365
000037 2073
000038 7473      	.DB  0x50,0x72,0x65,0x73,0x73,0x20,0x73,0x74
000039 7261
00003a 2174
00003b 4300
00003c 7261      	.DB  0x61,0x72,0x74,0x21,0x0,0x43,0x61,0x72
00003d 2073
00003e 6170
00003f 7373
000040 6465      	.DB  0x73,0x20,0x70,0x61,0x73,0x73,0x65,0x64
000041 253d
000042 0075
000043 694d
000044 736e      	.DB  0x3D,0x25,0x75,0x0,0x4D,0x69,0x6E,0x73
000045 253d
000046 2075
000047 6553
000048 7363      	.DB  0x3D,0x25,0x75,0x20,0x53,0x65,0x63,0x73
000049 253d
00004a 0075
00004b 6f54
00004c 6174      	.DB  0x3D,0x25,0x75,0x0,0x54,0x6F,0x74,0x61
00004d 206c
00004e 6143
00004f 7372
000050 253d      	.DB  0x6C,0x20,0x43,0x61,0x72,0x73,0x3D,0x25
000051 0075      	.DB  0x75,0x0
                 _0x2000003:
000052 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000053 0004      	.DW  0x04
000054 0004      	.DW  0x04
000055 0066      	.DW  __REG_VARS*2
                 
000056 000d      	.DW  0x0D
000057 0160      	.DW  _0xF
000058 006a      	.DW  _0x0*2
                 
000059 0002      	.DW  0x02
00005a 016d      	.DW  __base_y_G100
00005b 00a4      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
00005c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00005d 94f8      	CLI
00005e 27ee      	CLR  R30
00005f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000060 e0f1      	LDI  R31,1
000061 bffb      	OUT  GICR,R31
000062 bfeb      	OUT  GICR,R30
000063 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000064 e08d      	LDI  R24,(14-2)+1
000065 e0a2      	LDI  R26,2
000066 27bb      	CLR  R27
                 __CLEAR_REG:
000067 93ed      	ST   X+,R30
000068 958a      	DEC  R24
000069 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00006a e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00006b e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00006c e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00006d 93ed      	ST   X+,R30
00006e 9701      	SBIW R24,1
00006f f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000070 eae6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000071 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000072 9185      	LPM  R24,Z+
000073 9195      	LPM  R25,Z+
000074 9700      	SBIW R24,0
000075 f061      	BREQ __GLOBAL_INI_END
000076 91a5      	LPM  R26,Z+
000077 91b5      	LPM  R27,Z+
000078 9005      	LPM  R0,Z+
000079 9015      	LPM  R1,Z+
00007a 01bf      	MOVW R22,R30
00007b 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00007c 9005      	LPM  R0,Z+
00007d 920d      	ST   X+,R0
00007e 9701      	SBIW R24,1
00007f f7e1      	BRNE __GLOBAL_INI_LOOP
000080 01fb      	MOVW R30,R22
000081 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000082 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000083 bfed      	OUT  SPL,R30
000084 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000085 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000086 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000087 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000088 940c 008a 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;void EE_Write(unsigned int address,unsigned char data);
                 ;unsigned char EE_Read(unsigned int address);
                 ;void main(void)
                 ; 0000 0017 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0018 DDRB.0=0;
00008a 98b8      	CBI  0x17,0
                 ; 0000 0019 PORTB.0=1;
00008b 9ac0      	SBI  0x18,0
                 ; 0000 001A 
                 ; 0000 001B DDRD.2=0;
00008c 988a      	CBI  0x11,2
                 ; 0000 001C PORTD.2=1;
00008d 9a92      	SBI  0x12,2
                 ; 0000 001D 
                 ; 0000 001E lcd_init(16);
00008e e1a0      	LDI  R26,LOW(16)
00008f d0de      	RCALL _lcd_init
                 ; 0000 001F //-----INT0 configuration
                 ; 0000 0020 bit_set(MCUCR,1);         //Falling edge for external interrupt0
000090 b7e5      	IN   R30,0x35
000091 60e2      	ORI  R30,2
000092 bfe5      	OUT  0x35,R30
                 ; 0000 0021 bit_set(GICR,6);
000093 b7eb      	IN   R30,0x3B
000094 64e0      	ORI  R30,0x40
000095 bfeb      	OUT  0x3B,R30
                 ; 0000 0022 #asm("sei")
000096 9478      	SEI
                 ; 0000 0023 
                 ; 0000 0024 
                 ; 0000 0025 while (1)
                 _0xB:
                 ; 0000 0026 {
                 ; 0000 0027 
                 ; 0000 0028 if (operation == 0)
000097 2066      	TST  R6
000098 f429      	BRNE _0xE
                 ; 0000 0029 {
                 ; 0000 002A lcd_clear();
000099 d0a8      	RCALL _lcd_clear
                 ; 0000 002B lcd_puts("Press start!");
                +
00009a e6a0     +LDI R26 , LOW ( _0xF + ( 0 ) )
00009b e0b1     +LDI R27 , HIGH ( _0xF + ( 0 ) )
                 	__POINTW2MN _0xF,0
00009c d0c2      	RCALL _lcd_puts
                 ; 0000 002C }
                 ; 0000 002D else
00009d c013      	RJMP _0x10
                 _0xE:
                 ; 0000 002E {
                 ; 0000 002F lcd_clear();
00009e d0a3      	RCALL _lcd_clear
                 ; 0000 0030 lcd_printf("Cars passed=%u",TCNT0);
                +
00009f e7e7     +LDI R30 , LOW ( 2 * _0x0 + ( 13 ) )
0000a0 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 13 ) )
                 	__POINTW1FN _0x0,13
0000a1 d26d      	RCALL SUBOPT_0x0
                 ; 0000 0031 lcd_gotoxy(0,1);
0000a2 e0e0      	LDI  R30,LOW(0)
0000a3 93ea      	ST   -Y,R30
0000a4 e0a1      	LDI  R26,LOW(1)
0000a5 d08a      	RCALL _lcd_gotoxy
                 ; 0000 0032 lcd_printf("Mins=%u Secs=%u",mins,secs);
                +
0000a6 e8e6     +LDI R30 , LOW ( 2 * _0x0 + ( 28 ) )
0000a7 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 28 ) )
                 	__POINTW1FN _0x0,28
0000a8 93fa      	ST   -Y,R31
0000a9 93ea      	ST   -Y,R30
0000aa 2de4      	MOV  R30,R4
0000ab d26e      	RCALL SUBOPT_0x1
0000ac 2de5      	MOV  R30,R5
0000ad d26c      	RCALL SUBOPT_0x1
0000ae e088      	LDI  R24,8
0000af d21f      	RCALL _lcd_printf
0000b0 962a      	ADIW R28,10
                 ; 0000 0033 }
                 _0x10:
                 ; 0000 0034 }
0000b1 cfe5      	RJMP _0xB
                 ; 0000 0035 }
                 _0x11:
0000b2 cfff      	RJMP _0x11
                 ; .FEND
                 
                 	.DSEG
                 _0xF:
000160           	.BYTE 0xD
                 ;interrupt [2] void ext_int0 (void)
                 ; 0000 0038 {
                 
                 	.CSEG
                 _ext_int0:
                 ; .FSTART _ext_int0
0000b3 93ea      	ST   -Y,R30
0000b4 b7ef      	IN   R30,SREG
0000b5 93ea      	ST   -Y,R30
                 ; 0000 0039 operation = 1;
0000b6 e0e1      	LDI  R30,LOW(1)
0000b7 2e6e      	MOV  R6,R30
                 ; 0000 003A TCCR0= 0b00000110;
0000b8 e0e6      	LDI  R30,LOW(6)
0000b9 bfe3      	OUT  0x33,R30
                 ; 0000 003B TCCR2= 0b00000101;
0000ba e0e5      	LDI  R30,LOW(5)
0000bb bde5      	OUT  0x25,R30
                 ; 0000 003C bit_set(ASSR,3);
0000bc b5e2      	IN   R30,0x22
0000bd 60e8      	ORI  R30,8
0000be bde2      	OUT  0x22,R30
                 ; 0000 003D bit_set(TIMSK,6);
0000bf b7e9      	IN   R30,0x39
0000c0 64e0      	ORI  R30,0x40
0000c1 bfe9      	OUT  0x39,R30
                 ; 0000 003E 
                 ; 0000 003F }
0000c2 91e9      	LD   R30,Y+
0000c3 bfef      	OUT  SREG,R30
0000c4 91e9      	LD   R30,Y+
0000c5 9518      	RETI
                 ; .FEND
                 ;interrupt [5] void T2_OV (void)
                 ; 0000 0042 {
                 _T2_OV:
                 ; .FSTART _T2_OV
0000c6 920a      	ST   -Y,R0
0000c7 921a      	ST   -Y,R1
0000c8 92fa      	ST   -Y,R15
0000c9 936a      	ST   -Y,R22
0000ca 937a      	ST   -Y,R23
0000cb 938a      	ST   -Y,R24
0000cc 939a      	ST   -Y,R25
0000cd 93aa      	ST   -Y,R26
0000ce 93ba      	ST   -Y,R27
0000cf 93ea      	ST   -Y,R30
0000d0 93fa      	ST   -Y,R31
0000d1 b7ef      	IN   R30,SREG
0000d2 93ea      	ST   -Y,R30
                 ; 0000 0043 secs++;
0000d3 9453      	INC  R5
                 ; 0000 0044 if (secs == 60)
0000d4 e3ec      	LDI  R30,LOW(60)
0000d5 15e5      	CP   R30,R5
0000d6 f411      	BRNE _0x12
                 ; 0000 0045 {
                 ; 0000 0046 secs = 0;
0000d7 2455      	CLR  R5
                 ; 0000 0047 mins++;
0000d8 9443      	INC  R4
                 ; 0000 0048 }
                 ; 0000 0049 if (mins == 60)
                 _0x12:
0000d9 e3ec      	LDI  R30,LOW(60)
0000da 15e4      	CP   R30,R4
0000db f4b1      	BRNE _0x13
                 ; 0000 004A {
                 ; 0000 004B mins = 0;
0000dc 2444      	CLR  R4
                 ; 0000 004C hours++;
0000dd 9473      	INC  R7
                 ; 0000 004D TCCR0=0;
0000de e0e0      	LDI  R30,LOW(0)
0000df bfe3      	OUT  0x33,R30
                 ; 0000 004E TCCR2=0;
0000e0 bde5      	OUT  0x25,R30
                 ; 0000 004F lcd_clear();
0000e1 d060      	RCALL _lcd_clear
                 ; 0000 0050 lcd_printf("Total Cars=%u",TCNT0);
                +
0000e2 e9e6     +LDI R30 , LOW ( 2 * _0x0 + ( 44 ) )
0000e3 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 44 ) )
                 	__POINTW1FN _0x0,44
0000e4 d22a      	RCALL SUBOPT_0x0
                 ; 0000 0051 delay_ms(20000);
0000e5 e2a0      	LDI  R26,LOW(20000)
0000e6 e4be      	LDI  R27,HIGH(20000)
0000e7 d27a      	RCALL _delay_ms
                 ; 0000 0052 EE_Write(hours,TCNT0);
0000e8 2de7      	MOV  R30,R7
0000e9 e0f0      	LDI  R31,0
0000ea 93fa      	ST   -Y,R31
0000eb 93ea      	ST   -Y,R30
0000ec b7e2      	IN   R30,0x32
0000ed 2fae      	MOV  R26,R30
0000ee d011      	RCALL _EE_Write
                 ; 0000 0053 TCNT0=0;
0000ef e0e0      	LDI  R30,LOW(0)
0000f0 bfe2      	OUT  0x32,R30
                 ; 0000 0054 operation = 0;
0000f1 2466      	CLR  R6
                 ; 0000 0055 
                 ; 0000 0056 }
                 ; 0000 0057 }
                 _0x13:
0000f2 91e9      	LD   R30,Y+
0000f3 bfef      	OUT  SREG,R30
0000f4 91f9      	LD   R31,Y+
0000f5 91e9      	LD   R30,Y+
0000f6 91b9      	LD   R27,Y+
0000f7 91a9      	LD   R26,Y+
0000f8 9199      	LD   R25,Y+
0000f9 9189      	LD   R24,Y+
0000fa 9179      	LD   R23,Y+
0000fb 9169      	LD   R22,Y+
0000fc 90f9      	LD   R15,Y+
0000fd 9019      	LD   R1,Y+
0000fe 9009      	LD   R0,Y+
0000ff 9518      	RETI
                 ; .FEND
                 ;void EE_Write(unsigned int address,unsigned char data)
                 ; 0000 005B {
                 _EE_Write:
                 ; .FSTART _EE_Write
                 ; 0000 005C while(EECR.1 == 1);
000100 d248      	RCALL __SAVELOCR4
000101 2f1a      	MOV  R17,R26
                +
000102 812c     +LDD R18 , Y + 4
000103 813d     +LDD R19 , Y + 4 + 1
                 	__GETWRS 18,19,4
                 ;	address -> R18,R19
                 ;	data -> R17
                 _0x14:
000104 99e1      	SBIC 0x1C,1
000105 cffe      	RJMP _0x14
                 ; 0000 005D EEAR = address;
                +
000106 bb3f     +OUT 30 + 1 , R19
000107 bb2e     +OUT 30 , R18
                 	__OUTWR 18,19,30
                 ; 0000 005E EEDR = data;
000108 bb1d      	OUT  0x1D,R17
                 ; 0000 005F EECR.2=1;
000109 9ae2      	SBI  0x1C,2
                 ; 0000 0060 EECR.1=1;
00010a 9ae1      	SBI  0x1C,1
                 ; 0000 0061 }
00010b d244      	RCALL __LOADLOCR4
00010c 9626      	ADIW R28,6
00010d 9508      	RET
                 ; .FEND
                 ;unsigned char EE_Read(unsigned int address)
                 ; 0000 0064 {
                 ; 0000 0065 while(EECR.1 == 1);
                 ;	address -> R16,R17
                 ; 0000 0066 EEAR = address;
                 ; 0000 0067 EECR.0 = 1;
                 ; 0000 0068 return EEDR;
                 ; 0000 0069 }
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
00010e 931a      	ST   -Y,R17
00010f 2f1a      	MOV  R17,R26
000110 b3eb      	IN   R30,0x1B
000111 70ef      	ANDI R30,LOW(0xF)
000112 2fae      	MOV  R26,R30
000113 2fe1      	MOV  R30,R17
000114 7fe0      	ANDI R30,LOW(0xF0)
000115 2bea      	OR   R30,R26
000116 bbeb      	OUT  0x1B,R30
                +
000117 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000118 958a     +DEC R24
000119 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00011a 9ada      	SBI  0x1B,2
                +
00011b e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00011c 958a     +DEC R24
00011d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00011e 98da      	CBI  0x1B,2
                +
00011f e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000120 958a     +DEC R24
000121 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000122 c074      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
000123 93aa      	ST   -Y,R26
000124 81a8      	LD   R26,Y
000125 dfe8      	RCALL __lcd_write_nibble_G100
000126 81e8          ld    r30,y
000127 95e2          swap  r30
000128 83e8          st    y,r30
000129 81a8      	LD   R26,Y
00012a dfe3      	RCALL __lcd_write_nibble_G100
                +
00012b e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
00012c 958a     +DEC R24
00012d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
00012e 9621      	ADIW R28,1
00012f 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000130 931a      	ST   -Y,R17
000131 930a      	ST   -Y,R16
000132 2f1a      	MOV  R17,R26
000133 810a      	LDD  R16,Y+2
000134 2fe1      	MOV  R30,R17
000135 e0f0      	LDI  R31,0
000136 59e3      	SUBI R30,LOW(-__base_y_G100)
000137 4ffe      	SBCI R31,HIGH(-__base_y_G100)
000138 81e0      	LD   R30,Z
000139 0fe0      	ADD  R30,R16
00013a 2fae      	MOV  R26,R30
00013b dfe7      	RCALL __lcd_write_data
00013c 2e90      	MOV  R9,R16
00013d 2e81      	MOV  R8,R17
00013e 8119      	LDD  R17,Y+1
00013f 8108      	LDD  R16,Y+0
000140 9623      	ADIW R28,3
000141 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000142 e0a2      	LDI  R26,LOW(2)
000143 d1db      	RCALL SUBOPT_0x2
000144 e0ac      	LDI  R26,LOW(12)
000145 dfdd      	RCALL __lcd_write_data
000146 e0a1      	LDI  R26,LOW(1)
000147 d1d7      	RCALL SUBOPT_0x2
000148 e0e0      	LDI  R30,LOW(0)
000149 2e8e      	MOV  R8,R30
00014a 2e9e      	MOV  R9,R30
00014b 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00014c 931a      	ST   -Y,R17
00014d 2f1a      	MOV  R17,R26
00014e 301a      	CPI  R17,10
00014f f011      	BREQ _0x2000005
000150 149b      	CP   R9,R11
000151 f038      	BRLO _0x2000004
                 _0x2000005:
000152 e0e0      	LDI  R30,LOW(0)
000153 93ea      	ST   -Y,R30
000154 9483      	INC  R8
000155 2da8      	MOV  R26,R8
000156 dfd9      	RCALL _lcd_gotoxy
000157 301a      	CPI  R17,10
000158 f1f1      	BREQ _0x2080001
                 _0x2000004:
000159 9493      	INC  R9
00015a 9ad8      	SBI  0x1B,0
00015b 2fa1      	MOV  R26,R17
00015c dfc6      	RCALL __lcd_write_data
00015d 98d8      	CBI  0x1B,0
00015e c038      	RJMP _0x2080001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00015f d1e9      	RCALL __SAVELOCR4
000160 019d      	MOVW R18,R26
                 _0x2000008:
000161 01d9      	MOVW R26,R18
                +
000162 5f2f     +SUBI R18 , LOW ( - 1 )
000163 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000164 91ec      	LD   R30,X
000165 2f1e      	MOV  R17,R30
000166 30e0      	CPI  R30,0
000167 f019      	BREQ _0x200000A
000168 2fa1      	MOV  R26,R17
000169 dfe2      	RCALL _lcd_putchar
00016a cff6      	RJMP _0x2000008
                 _0x200000A:
00016b d1e4      	RCALL __LOADLOCR4
00016c 9624      	ADIW R28,4
00016d 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
00016e 931a      	ST   -Y,R17
00016f 2f1a      	MOV  R17,R26
000170 b3ea      	IN   R30,0x1A
000171 6fe0      	ORI  R30,LOW(0xF0)
000172 bbea      	OUT  0x1A,R30
000173 9ad2      	SBI  0x1A,2
000174 9ad0      	SBI  0x1A,0
000175 9ad1      	SBI  0x1A,1
000176 98da      	CBI  0x1B,2
000177 98d8      	CBI  0x1B,0
000178 98d9      	CBI  0x1B,1
000179 2eb1      	MOV  R11,R17
00017a 2fe1      	MOV  R30,R17
00017b 58e0      	SUBI R30,-LOW(128)
                +
00017c 93e0 016f+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
00017e 2fe1      	MOV  R30,R17
00017f 54e0      	SUBI R30,-LOW(192)
                +
000180 93e0 0170+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000182 e1a4      	LDI  R26,LOW(20)
000183 e0b0      	LDI  R27,0
000184 d1dd      	RCALL _delay_ms
000185 d19d      	RCALL SUBOPT_0x3
000186 d19c      	RCALL SUBOPT_0x3
000187 d19b      	RCALL SUBOPT_0x3
000188 e2a0      	LDI  R26,LOW(32)
000189 df84      	RCALL __lcd_write_nibble_G100
                +
00018a ec88     +LDI R24 , LOW ( 200 )
00018b e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00018c 9701     +SBIW R24 , 1
00018d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00018e e2a8      	LDI  R26,LOW(40)
00018f df93      	RCALL __lcd_write_data
000190 e0a4      	LDI  R26,LOW(4)
000191 df91      	RCALL __lcd_write_data
000192 e8a5      	LDI  R26,LOW(133)
000193 df8f      	RCALL __lcd_write_data
000194 e0a6      	LDI  R26,LOW(6)
000195 df8d      	RCALL __lcd_write_data
000196 dfab      	RCALL _lcd_clear
                 _0x2080001:
000197 9119      	LD   R17,Y+
000198 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 __print_G101:
                 ; .FSTART __print_G101
000199 93ba      	ST   -Y,R27
00019a 93aa      	ST   -Y,R26
00019b 9726      	SBIW R28,6
00019c d1aa      	RCALL __SAVELOCR6
00019d e010      	LDI  R17,0
00019e 85ac      	LDD  R26,Y+12
00019f 85bd      	LDD  R27,Y+12+1
0001a0 e0e0      	LDI  R30,LOW(0)
0001a1 e0f0      	LDI  R31,HIGH(0)
0001a2 93ed      	ST   X+,R30
0001a3 93fc      	ST   X,R31
                 _0x2020016:
0001a4 89ea      	LDD  R30,Y+18
0001a5 89fb      	LDD  R31,Y+18+1
0001a6 9631      	ADIW R30,1
0001a7 8bea      	STD  Y+18,R30
0001a8 8bfb      	STD  Y+18+1,R31
0001a9 9731      	SBIW R30,1
0001aa 91e4      	LPM  R30,Z
0001ab 2f2e      	MOV  R18,R30
0001ac 30e0      	CPI  R30,0
0001ad f409      	BRNE PC+2
0001ae c10b      	RJMP _0x2020018
0001af 2fe1      	MOV  R30,R17
0001b0 30e0      	CPI  R30,0
0001b1 f431      	BRNE _0x202001C
0001b2 3225      	CPI  R18,37
0001b3 f411      	BRNE _0x202001D
0001b4 e011      	LDI  R17,LOW(1)
0001b5 c001      	RJMP _0x202001E
                 _0x202001D:
0001b6 d173      	RCALL SUBOPT_0x4
                 _0x202001E:
0001b7 c101      	RJMP _0x202001B
                 _0x202001C:
0001b8 30e1      	CPI  R30,LOW(0x1)
0001b9 f4a1      	BRNE _0x202001F
0001ba 3225      	CPI  R18,37
0001bb f411      	BRNE _0x2020020
0001bc d16d      	RCALL SUBOPT_0x4
0001bd c0fa      	RJMP _0x20200CC
                 _0x2020020:
0001be e012      	LDI  R17,LOW(2)
0001bf e040      	LDI  R20,LOW(0)
0001c0 e000      	LDI  R16,LOW(0)
0001c1 322d      	CPI  R18,45
0001c2 f411      	BRNE _0x2020021
0001c3 e001      	LDI  R16,LOW(1)
0001c4 c0f4      	RJMP _0x202001B
                 _0x2020021:
0001c5 322b      	CPI  R18,43
0001c6 f411      	BRNE _0x2020022
0001c7 e24b      	LDI  R20,LOW(43)
0001c8 c0f0      	RJMP _0x202001B
                 _0x2020022:
0001c9 3220      	CPI  R18,32
0001ca f411      	BRNE _0x2020023
0001cb e240      	LDI  R20,LOW(32)
0001cc c0ec      	RJMP _0x202001B
                 _0x2020023:
0001cd c002      	RJMP _0x2020024
                 _0x202001F:
0001ce 30e2      	CPI  R30,LOW(0x2)
0001cf f439      	BRNE _0x2020025
                 _0x2020024:
0001d0 e050      	LDI  R21,LOW(0)
0001d1 e013      	LDI  R17,LOW(3)
0001d2 3320      	CPI  R18,48
0001d3 f411      	BRNE _0x2020026
0001d4 6800      	ORI  R16,LOW(128)
0001d5 c0e3      	RJMP _0x202001B
                 _0x2020026:
0001d6 c003      	RJMP _0x2020027
                 _0x2020025:
0001d7 30e3      	CPI  R30,LOW(0x3)
0001d8 f009      	BREQ PC+2
0001d9 c0df      	RJMP _0x202001B
                 _0x2020027:
0001da 3320      	CPI  R18,48
0001db f010      	BRLO _0x202002A
0001dc 332a      	CPI  R18,58
0001dd f008      	BRLO _0x202002B
                 _0x202002A:
0001de c007      	RJMP _0x2020029
                 _0x202002B:
0001df e0aa      	LDI  R26,LOW(10)
0001e0 9f5a      	MUL  R21,R26
0001e1 2d50      	MOV  R21,R0
0001e2 2fe2      	MOV  R30,R18
0001e3 53e0      	SUBI R30,LOW(48)
0001e4 0f5e      	ADD  R21,R30
0001e5 c0d3      	RJMP _0x202001B
                 _0x2020029:
0001e6 2fe2      	MOV  R30,R18
0001e7 36e3      	CPI  R30,LOW(0x63)
0001e8 f439      	BRNE _0x202002F
0001e9 d147      	RCALL SUBOPT_0x5
0001ea 89e8      	LDD  R30,Y+16
0001eb 89f9      	LDD  R31,Y+16+1
0001ec 81a4      	LDD  R26,Z+4
0001ed 93aa      	ST   -Y,R26
0001ee d148      	RCALL SUBOPT_0x6
0001ef c0c8      	RJMP _0x2020030
                 _0x202002F:
0001f0 37e3      	CPI  R30,LOW(0x73)
0001f1 f429      	BRNE _0x2020032
0001f2 d13e      	RCALL SUBOPT_0x5
0001f3 d149      	RCALL SUBOPT_0x7
0001f4 d101      	RCALL _strlen
0001f5 2f1e      	MOV  R17,R30
0001f6 c007      	RJMP _0x2020033
                 _0x2020032:
0001f7 37e0      	CPI  R30,LOW(0x70)
0001f8 f449      	BRNE _0x2020035
0001f9 d137      	RCALL SUBOPT_0x5
0001fa d142      	RCALL SUBOPT_0x7
0001fb d106      	RCALL _strlenf
0001fc 2f1e      	MOV  R17,R30
0001fd 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0001fe 6002      	ORI  R16,LOW(2)
0001ff 770f      	ANDI R16,LOW(127)
000200 e030      	LDI  R19,LOW(0)
000201 c03a      	RJMP _0x2020036
                 _0x2020035:
000202 36e4      	CPI  R30,LOW(0x64)
000203 f011      	BREQ _0x2020039
000204 36e9      	CPI  R30,LOW(0x69)
000205 f411      	BRNE _0x202003A
                 _0x2020039:
000206 6004      	ORI  R16,LOW(4)
000207 c002      	RJMP _0x202003B
                 _0x202003A:
000208 37e5      	CPI  R30,LOW(0x75)
000209 f431      	BRNE _0x202003C
                 _0x202003B:
00020a e5e4      	LDI  R30,LOW(_tbl10_G101*2)
00020b e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
00020c 83ee      	STD  Y+6,R30
00020d 83ff      	STD  Y+6+1,R31
00020e e015      	LDI  R17,LOW(5)
00020f c00c      	RJMP _0x202003D
                 _0x202003C:
000210 35e8      	CPI  R30,LOW(0x58)
000211 f411      	BRNE _0x202003F
000212 6008      	ORI  R16,LOW(8)
000213 c003      	RJMP _0x2020040
                 _0x202003F:
000214 37e8      	CPI  R30,LOW(0x78)
000215 f009      	BREQ PC+2
000216 c0a1      	RJMP _0x2020071
                 _0x2020040:
000217 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000218 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000219 83ee      	STD  Y+6,R30
00021a 83ff      	STD  Y+6+1,R31
00021b e014      	LDI  R17,LOW(4)
                 _0x202003D:
00021c ff02      	SBRS R16,2
00021d c015      	RJMP _0x2020042
00021e d112      	RCALL SUBOPT_0x5
00021f 89a8      	LDD  R26,Y+16
000220 89b9      	LDD  R27,Y+16+1
000221 9614      	ADIW R26,4
000222 91ed      	LD   R30,X+
000223 91fd      	LD   R31,X+
000224 87ea      	STD  Y+10,R30
000225 87fb      	STD  Y+10+1,R31
000226 85ab      	LDD  R26,Y+11
000227 23aa      	TST  R26
000228 f422      	BRPL _0x2020043
000229 d12b      	RCALL __ANEGW1
00022a 87ea      	STD  Y+10,R30
00022b 87fb      	STD  Y+10+1,R31
00022c e24d      	LDI  R20,LOW(45)
                 _0x2020043:
00022d 3040      	CPI  R20,0
00022e f011      	BREQ _0x2020044
00022f 5f1f      	SUBI R17,-LOW(1)
000230 c001      	RJMP _0x2020045
                 _0x2020044:
000231 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
000232 c009      	RJMP _0x2020046
                 _0x2020042:
000233 d0fd      	RCALL SUBOPT_0x5
000234 89a8      	LDD  R26,Y+16
000235 89b9      	LDD  R27,Y+16+1
000236 9614      	ADIW R26,4
                +
000237 91ed     +LD R30 , X +
000238 91fc     +LD R31 , X
000239 9711     +SBIW R26 , 1
                 	__GETW1P
00023a 87ea      	STD  Y+10,R30
00023b 87fb      	STD  Y+10+1,R31
                 _0x2020046:
                 _0x2020036:
00023c fd00      	SBRC R16,0
00023d c010      	RJMP _0x2020047
                 _0x2020048:
00023e 1715      	CP   R17,R21
00023f f470      	BRSH _0x202004A
000240 ff07      	SBRS R16,7
000241 c008      	RJMP _0x202004B
000242 ff02      	SBRS R16,2
000243 c004      	RJMP _0x202004C
000244 7f0b      	ANDI R16,LOW(251)
000245 2f24      	MOV  R18,R20
000246 5011      	SUBI R17,LOW(1)
000247 c001      	RJMP _0x202004D
                 _0x202004C:
000248 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000249 c001      	RJMP _0x202004E
                 _0x202004B:
00024a e220      	LDI  R18,LOW(32)
                 _0x202004E:
00024b d0de      	RCALL SUBOPT_0x4
00024c 5051      	SUBI R21,LOW(1)
00024d cff0      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
00024e 2f31      	MOV  R19,R17
00024f ff01      	SBRS R16,1
000250 c016      	RJMP _0x202004F
                 _0x2020050:
000251 3030      	CPI  R19,0
000252 f099      	BREQ _0x2020052
000253 ff03      	SBRS R16,3
000254 c006      	RJMP _0x2020053
000255 81ee      	LDD  R30,Y+6
000256 81ff      	LDD  R31,Y+6+1
000257 9125      	LPM  R18,Z+
000258 83ee      	STD  Y+6,R30
000259 83ff      	STD  Y+6+1,R31
00025a c005      	RJMP _0x2020054
                 _0x2020053:
00025b 81ae      	LDD  R26,Y+6
00025c 81bf      	LDD  R27,Y+6+1
00025d 912d      	LD   R18,X+
00025e 83ae      	STD  Y+6,R26
00025f 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000260 d0c9      	RCALL SUBOPT_0x4
000261 3050      	CPI  R21,0
000262 f009      	BREQ _0x2020055
000263 5051      	SUBI R21,LOW(1)
                 _0x2020055:
000264 5031      	SUBI R19,LOW(1)
000265 cfeb      	RJMP _0x2020050
                 _0x2020052:
000266 c048      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000267 e320      	LDI  R18,LOW(48)
000268 81ee      	LDD  R30,Y+6
000269 81ff      	LDD  R31,Y+6+1
00026a d0ee      	RCALL __GETW1PF
00026b 87e8      	STD  Y+8,R30
00026c 87f9      	STD  Y+8+1,R31
00026d 81ee      	LDD  R30,Y+6
00026e 81ff      	LDD  R31,Y+6+1
00026f 9632      	ADIW R30,2
000270 83ee      	STD  Y+6,R30
000271 83ff      	STD  Y+6+1,R31
                 _0x202005A:
000272 85e8      	LDD  R30,Y+8
000273 85f9      	LDD  R31,Y+8+1
000274 85aa      	LDD  R26,Y+10
000275 85bb      	LDD  R27,Y+10+1
000276 17ae      	CP   R26,R30
000277 07bf      	CPC  R27,R31
000278 f050      	BRLO _0x202005C
000279 5f2f      	SUBI R18,-LOW(1)
00027a 85a8      	LDD  R26,Y+8
00027b 85b9      	LDD  R27,Y+8+1
00027c 85ea      	LDD  R30,Y+10
00027d 85fb      	LDD  R31,Y+10+1
00027e 1bea      	SUB  R30,R26
00027f 0bfb      	SBC  R31,R27
000280 87ea      	STD  Y+10,R30
000281 87fb      	STD  Y+10+1,R31
000282 cfef      	RJMP _0x202005A
                 _0x202005C:
000283 332a      	CPI  R18,58
000284 f028      	BRLO _0x202005D
000285 ff03      	SBRS R16,3
000286 c002      	RJMP _0x202005E
000287 5f29      	SUBI R18,-LOW(7)
000288 c001      	RJMP _0x202005F
                 _0x202005E:
000289 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
00028a fd04      	SBRC R16,4
00028b c019      	RJMP _0x2020061
00028c 3321      	CPI  R18,49
00028d f420      	BRSH _0x2020063
00028e 85a8      	LDD  R26,Y+8
00028f 85b9      	LDD  R27,Y+8+1
000290 9711      	SBIW R26,1
000291 f409      	BRNE _0x2020062
                 _0x2020063:
000292 c009      	RJMP _0x20200CD
                 _0x2020062:
000293 1753      	CP   R21,R19
000294 f010      	BRLO _0x2020067
000295 ff00      	SBRS R16,0
000296 c001      	RJMP _0x2020068
                 _0x2020067:
000297 c011      	RJMP _0x2020066
                 _0x2020068:
000298 e220      	LDI  R18,LOW(32)
000299 ff07      	SBRS R16,7
00029a c00a      	RJMP _0x2020069
00029b e320      	LDI  R18,LOW(48)
                 _0x20200CD:
00029c 6100      	ORI  R16,LOW(16)
00029d ff02      	SBRS R16,2
00029e c006      	RJMP _0x202006A
00029f 7f0b      	ANDI R16,LOW(251)
0002a0 934a      	ST   -Y,R20
0002a1 d095      	RCALL SUBOPT_0x6
0002a2 3050      	CPI  R21,0
0002a3 f009      	BREQ _0x202006B
0002a4 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
0002a5 d084      	RCALL SUBOPT_0x4
0002a6 3050      	CPI  R21,0
0002a7 f009      	BREQ _0x202006C
0002a8 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0002a9 5031      	SUBI R19,LOW(1)
0002aa 85a8      	LDD  R26,Y+8
0002ab 85b9      	LDD  R27,Y+8+1
0002ac 9712      	SBIW R26,2
0002ad f008      	BRLO _0x2020059
0002ae cfb8      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0002af ff00      	SBRS R16,0
0002b0 c007      	RJMP _0x202006D
                 _0x202006E:
0002b1 3050      	CPI  R21,0
0002b2 f029      	BREQ _0x2020070
0002b3 5051      	SUBI R21,LOW(1)
0002b4 e2e0      	LDI  R30,LOW(32)
0002b5 93ea      	ST   -Y,R30
0002b6 d080      	RCALL SUBOPT_0x6
0002b7 cff9      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0002b8 e010      	LDI  R17,LOW(0)
                 _0x202001B:
0002b9 ceea      	RJMP _0x2020016
                 _0x2020018:
0002ba 85ac      	LDD  R26,Y+12
0002bb 85bd      	LDD  R27,Y+12+1
0002bc 91ed      	LD   R30,X+
0002bd 91fd      	LD   R31,X+
0002be d08f      	RCALL __LOADLOCR6
0002bf 9664      	ADIW R28,20
0002c0 9508      	RET
                 ; .FEND
                 _put_lcd_G101:
                 ; .FSTART _put_lcd_G101
0002c1 d087      	RCALL __SAVELOCR4
0002c2 018d      	MOVW R16,R26
0002c3 813c      	LDD  R19,Y+4
0002c4 2fa3      	MOV  R26,R19
0002c5 de86      	RCALL _lcd_putchar
0002c6 01d8      	MOVW R26,R16
0002c7 91ed      	LD   R30,X+
0002c8 91fd      	LD   R31,X+
0002c9 9631      	ADIW R30,1
0002ca 93fe      	ST   -X,R31
0002cb 93ee      	ST   -X,R30
0002cc d083      	RCALL __LOADLOCR4
0002cd 9625      	ADIW R28,5
0002ce 9508      	RET
                 ; .FEND
                 _lcd_printf:
                 ; .FSTART _lcd_printf
0002cf 92ff      	PUSH R15
0002d0 2ef8      	MOV  R15,R24
0002d1 9726      	SBIW R28,6
0002d2 931a      	ST   -Y,R17
0002d3 930a      	ST   -Y,R16
0002d4 01de      	MOVW R26,R28
0002d5 9614      	ADIW R26,4
                +
0002d6 2400     +CLR R0
0002d7 0daf     +ADD R26 , R15
0002d8 1db0     +ADC R27 , R0
                 	__ADDW2R15
0002d9 018d      	MOVW R16,R26
0002da e0e0      	LDI  R30,LOW(0)
0002db 83ec      	STD  Y+4,R30
0002dc 83ed      	STD  Y+4+1,R30
0002dd 83ee      	STD  Y+6,R30
0002de 83ef      	STD  Y+6+1,R30
0002df 01de      	MOVW R26,R28
0002e0 9618      	ADIW R26,8
                +
0002e1 2400     +CLR R0
0002e2 0daf     +ADD R26 , R15
0002e3 1db0     +ADC R27 , R0
                 	__ADDW2R15
0002e4 91ed      	LD   R30,X+
0002e5 91fd      	LD   R31,X+
0002e6 93fa      	ST   -Y,R31
0002e7 93ea      	ST   -Y,R30
0002e8 931a      	ST   -Y,R17
0002e9 930a      	ST   -Y,R16
0002ea ece1      	LDI  R30,LOW(_put_lcd_G101)
0002eb e0f2      	LDI  R31,HIGH(_put_lcd_G101)
0002ec 93fa      	ST   -Y,R31
0002ed 93ea      	ST   -Y,R30
0002ee 01de      	MOVW R26,R28
0002ef 9618      	ADIW R26,8
0002f0 dea8      	RCALL __print_G101
0002f1 8119      	LDD  R17,Y+1
0002f2 8108      	LDD  R16,Y+0
0002f3 9628      	ADIW R28,8
0002f4 90ff      	POP  R15
0002f5 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002f6 93ba      	ST   -Y,R27
0002f7 93aa      	ST   -Y,R26
0002f8 91a9          ld   r26,y+
0002f9 91b9          ld   r27,y+
0002fa 27ee          clr  r30
0002fb 27ff          clr  r31
                 strlen0:
0002fc 916d          ld   r22,x+
0002fd 2366          tst  r22
0002fe f011          breq strlen1
0002ff 9631          adiw r30,1
000300 cffb          rjmp strlen0
                 strlen1:
000301 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000302 93ba      	ST   -Y,R27
000303 93aa      	ST   -Y,R26
000304 27aa          clr  r26
000305 27bb          clr  r27
000306 91e9          ld   r30,y+
000307 91f9          ld   r31,y+
                 strlenf0:
000308 9005      	lpm  r0,z+
000309 2000          tst  r0
00030a f011          breq strlenf1
00030b 9611          adiw r26,1
00030c cffb          rjmp strlenf0
                 strlenf1:
00030d 01fd          movw r30,r26
00030e 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __base_y_G100:
00016d           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x0:
00030f 93fa      	ST   -Y,R31
000310 93ea      	ST   -Y,R30
000311 b7e2      	IN   R30,0x32
000312 27ff      	CLR  R31
000313 2766      	CLR  R22
000314 2777      	CLR  R23
000315 d047      	RCALL __PUTPARD1
000316 e084      	LDI  R24,4
000317 dfb7      	RCALL _lcd_printf
000318 9626      	ADIW R28,6
000319 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
00031a 27ff      	CLR  R31
00031b 2766      	CLR  R22
00031c 2777      	CLR  R23
00031d d03f      	RCALL __PUTPARD1
00031e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
00031f de03      	RCALL __lcd_write_data
000320 e0a3      	LDI  R26,LOW(3)
000321 e0b0      	LDI  R27,0
000322 c03f      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x3:
000323 e3a0      	LDI  R26,LOW(48)
000324 dde9      	RCALL __lcd_write_nibble_G100
                +
000325 ec88     +LDI R24 , LOW ( 200 )
000326 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000327 9701     +SBIW R24 , 1
000328 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000329 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x4:
00032a 932a      	ST   -Y,R18
00032b 85ad      	LDD  R26,Y+13
00032c 85be      	LDD  R27,Y+13+1
00032d 85ef      	LDD  R30,Y+15
00032e 89f8      	LDD  R31,Y+15+1
00032f 9509      	ICALL
000330 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x5:
000331 89e8      	LDD  R30,Y+16
000332 89f9      	LDD  R31,Y+16+1
000333 9734      	SBIW R30,4
000334 8be8      	STD  Y+16,R30
000335 8bf9      	STD  Y+16+1,R31
000336 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
000337 85ad      	LDD  R26,Y+13
000338 85be      	LDD  R27,Y+13+1
000339 85ef      	LDD  R30,Y+15
00033a 89f8      	LDD  R31,Y+15+1
00033b 9509      	ICALL
00033c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
00033d 89a8      	LDD  R26,Y+16
00033e 89b9      	LDD  R27,Y+16+1
00033f 9614      	ADIW R26,4
000340 91ed      	LD   R30,X+
000341 91fd      	LD   R31,X+
000342 83ee      	STD  Y+6,R30
000343 83ff      	STD  Y+6+1,R31
000344 81ae      	LDD  R26,Y+6
000345 81bf      	LDD  R27,Y+6+1
000346 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
000347 935a      	ST   -Y,R21
                 __SAVELOCR5:
000348 934a      	ST   -Y,R20
                 __SAVELOCR4:
000349 933a      	ST   -Y,R19
                 __SAVELOCR3:
00034a 932a      	ST   -Y,R18
                 __SAVELOCR2:
00034b 931a      	ST   -Y,R17
00034c 930a      	ST   -Y,R16
00034d 9508      	RET
                 
                 __LOADLOCR6:
00034e 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00034f 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000350 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000351 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000352 8119      	LDD  R17,Y+1
000353 8108      	LD   R16,Y
000354 9508      	RET
                 
                 __ANEGW1:
000355 95f1      	NEG  R31
000356 95e1      	NEG  R30
000357 40f0      	SBCI R31,0
000358 9508      	RET
                 
                 __GETW1PF:
000359 9005      	LPM  R0,Z+
00035a 91f4      	LPM  R31,Z
00035b 2de0      	MOV  R30,R0
00035c 9508      	RET
                 
                 __PUTPARD1:
00035d 937a      	ST   -Y,R23
00035e 936a      	ST   -Y,R22
00035f 93fa      	ST   -Y,R31
000360 93ea      	ST   -Y,R30
000361 9508      	RET
                 
                 _delay_ms:
000362 9610      	adiw r26,0
000363 f039      	breq __delay_ms1
                 __delay_ms0:
000364 95a8      	wdr
                +
000365 ed80     +LDI R24 , LOW ( 0x7D0 )
000366 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000367 9701     +SBIW R24 , 1
000368 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000369 9711      	sbiw r26,1
00036a f7c9      	brne __delay_ms0
                 __delay_ms1:
00036b 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  15 r1 :   3 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   3 r7 :   2 
r8 :   4 r9 :   4 r10:   0 r11:   2 r12:   0 r13:   0 r14:   0 r15:   7 
r16:  37 r17:  42 r18:  32 r19:  13 r20:   9 r21:  17 r22:   9 r23:   5 
r24:  26 r25:   7 r26:  86 r27:  31 r28:  15 r29:   1 r30: 178 r31:  60 
x  :  22 y  : 170 z  :  14 
Registers used: 29 out of 35 (82.9%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   4 
adiw  :  21 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  16 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   0 brmi  :   0 brne  :  31 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   7 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  17 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   6 cpc   :   1 cpi   :  32 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :  10 inc   :   5 jmp   :  22 ld    :  39 ldd   :  61 ldi   :  92 
lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  37 movw  :  12 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :  11 out   :  22 pop   :   1 push  :   1 rcall :  66 ret   :  24 
reti  :   2 rjmp  :  58 rol   :   0 ror   :   0 sbc   :   1 sbci  :   3 
sbi   :   9 sbic  :   1 sbis  :   0 sbiw  :  14 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  64 std   :  30 sts   :   2 sub   :   1 subi  :  17 swap  :   1 
tst   :   4 wdr   :   1 
Instructions used: 53 out of 116 (45.7%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0006d8   1650    102   1752   16384  10.7%
[.dseg] 0x000060 0x000171      0     17     17    1024   1.7%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 7 warnings
