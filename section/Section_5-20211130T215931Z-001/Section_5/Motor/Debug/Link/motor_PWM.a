;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;void PWM_init()
; 0000 000C {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000D TCCR0 |= 0b01101001 ;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 000E //TCCR0|=(1<<WGM00)|(1<<WGM01)|(1<<COM01)|(1<<CS00);     //Fast PWM, non-inverting mode and no prescaler.
; 0000 000F DDRB.3 = 1;            //setting the output pin of 4th pin of Port B-PB3.                                               //0 to 255 - 0 means 0% and 255 means 100% duty cycle
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0010 }
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;void main(void)
; 0000 0013 {
;PCODE: $00000016 VOL: 0
; 0000 0014 PWM_init();
;PCODE: $00000017 VOL: 0
; 0000 0015 
; 0000 0016 DDRD.2 = 0;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0017 PORTD.2 = 1;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0018 
; 0000 0019 DDRD.3 = 0;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 001A PORTD.3 = 1;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 001B 
; 0000 001C DDRB.2 = 0;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 001D PORTB.2 = 1;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 001E 
; 0000 001F #asm("sei") //SREG = (1<<7); // GLobal interrupt
;PCODE: $00000024 VOL: 0
; 0000 0020 GICR |= 0b11100000;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0021 MCUCR |= 0b00001010 ;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0022 MCUCSR |= (1<<6);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0023 
; 0000 0024 
; 0000 0025 OCR0 = 0; // Set OCR0 to 255 so that the duty cycle is initially 0 and the motor is not rotating
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0026 
; 0000 0027 while (1)
;PCODE: $00000030 VOL: 0
; 0000 0028 {
; 0000 0029 // Please write your application code here
; 0000 002A 
; 0000 002B }
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 002C }
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;ISR(INT0_vect)
; 0000 0030 ISR(INT0_vect)
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;ISR(INT0_vect)
