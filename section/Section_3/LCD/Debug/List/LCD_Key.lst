
AVRASM ver. 2.1.30  E:\fourth_year\411\embeded\Abdo\my lect and sec slide\section\Section_3\LCD\Debug\List\LCD_Key.asm Sat Nov 20 01:40:49 2021

E:\fourth_year\411\embeded\Abdo\my lect and sec slide\section\Section_3\LCD\Debug\List\LCD_Key.asm(1414): warning: Register r5 already defined by the .DEF directive
E:\fourth_year\411\embeded\Abdo\my lect and sec slide\section\Section_3\LCD\Debug\List\LCD_Key.asm(1415): warning: Register r4 already defined by the .DEF directive
E:\fourth_year\411\embeded\Abdo\my lect and sec slide\section\Section_3\LCD\Debug\List\LCD_Key.asm(1416): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.46a 
                 ;(C) Copyright 1998-2021 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0053 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 7023
000034 6f65
000035 6c70
000036 2065      	.DB  0x23,0x70,0x65,0x6F,0x70,0x6C,0x65,0x20
000037 203d
000038 7525
000039 4800
00003a 6c65      	.DB  0x3D,0x20,0x25,0x75,0x0,0x48,0x65,0x6C
00003b 6f6c
00003c 2000
00003d 5641
00003e 2152      	.DB  0x6C,0x6F,0x0,0x20,0x41,0x56,0x52,0x21
00003f 5300
000040 6365
000041 6974
000042 6e6f      	.DB  0x0,0x53,0x65,0x63,0x74,0x69,0x6F,0x6E
000043 3320
000044 0021      	.DB  0x20,0x33,0x21,0x0
                 _0x2000003:
000045 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000046 0006      	.DW  0x06
000047 0160      	.DW  _0x6
000048 0073      	.DW  _0x0*2+13
                 
000049 0006      	.DW  0x06
00004a 0166      	.DW  _0x6+6
00004b 0079      	.DW  _0x0*2+19
                 
00004c 000b      	.DW  0x0B
00004d 016c      	.DW  _0x6+12
00004e 007f      	.DW  _0x0*2+25
                 
00004f 0002      	.DW  0x02
000050 0177      	.DW  __base_y_G100
000051 008a      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000052 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000053 94f8      	CLI
000054 27ee      	CLR  R30
000055 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000056 e0f1      	LDI  R31,1
000057 bffb      	OUT  GICR,R31
000058 bfeb      	OUT  GICR,R30
000059 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00005a e08d      	LDI  R24,(14-2)+1
00005b e0a2      	LDI  R26,2
00005c 27bb      	CLR  R27
                 __CLEAR_REG:
00005d 93ed      	ST   X+,R30
00005e 958a      	DEC  R24
00005f f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000060 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000061 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000062 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000063 93ed      	ST   X+,R30
000064 9701      	SBIW R24,1
000065 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000066 e8ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000067 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000068 9185      	LPM  R24,Z+
000069 9195      	LPM  R25,Z+
00006a 9700      	SBIW R24,0
00006b f061      	BREQ __GLOBAL_INI_END
00006c 91a5      	LPM  R26,Z+
00006d 91b5      	LPM  R27,Z+
00006e 9005      	LPM  R0,Z+
00006f 9015      	LPM  R1,Z+
000070 01bf      	MOVW R22,R30
000071 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000072 9005      	LPM  R0,Z+
000073 920d      	ST   X+,R0
000074 9701      	SBIW R24,1
000075 f7e1      	BRNE __GLOBAL_INI_LOOP
000076 01fb      	MOVW R30,R22
000077 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000078 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000079 bfed      	OUT  SPL,R30
00007a e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00007b bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00007c e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00007d e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007e 940c 0080 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;void main(void)
                 ; 0000 000D {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000E 
                 ; 0000 000F unsigned char x = 0;
                 ; 0000 0010 lcd_init(16);       // Don't forget
                 ;	x -> R17
000080 e010      	LDI  R17,0
000081 e1a0      	LDI  R26,LOW(16)
000082 d07f      	RCALL _lcd_init
                 ; 0000 0011 
                 ; 0000 0012 while (1)
                 _0x3:
                 ; 0000 0013 {
                 ; 0000 0014 // Please write your application code here
                 ; 0000 0015 
                 ; 0000 0016 lcd_printf("#people = %u",x++);
                +
000083 e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000084 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000085 93fa      	ST   -Y,R31
000086 93ea      	ST   -Y,R30
000087 2fe1      	MOV  R30,R17
000088 5f1f      	SUBI R17,-1
000089 27ff      	CLR  R31
00008a 2766      	CLR  R22
00008b 2777      	CLR  R23
00008c d258      	RCALL __PUTPARD1
00008d e084      	LDI  R24,4
00008e d1d4      	RCALL _lcd_printf
00008f 9626      	ADIW R28,6
                 ; 0000 0017 delay_ms(1000);
000090 d212      	RCALL SUBOPT_0x0
                 ; 0000 0018 lcd_clear();
                 ; 0000 0019 
                 ; 0000 001A 
                 ; 0000 001B lcd_puts("Hello");
                +
000091 e6a0     +LDI R26 , LOW ( _0x6 + ( 0 ) )
000092 e0b1     +LDI R27 , HIGH ( _0x6 + ( 0 ) )
                 	__POINTW2MN _0x6,0
000093 d05f      	RCALL _lcd_puts
                 ; 0000 001C lcd_puts(" AVR!");
                +
000094 e6a6     +LDI R26 , LOW ( _0x6 + ( 6 ) )
000095 e0b1     +LDI R27 , HIGH ( _0x6 + ( 6 ) )
                 	__POINTW2MN _0x6,6
000096 d05c      	RCALL _lcd_puts
                 ; 0000 001D delay_ms(1000);
000097 d20b      	RCALL SUBOPT_0x0
                 ; 0000 001E lcd_clear();
                 ; 0000 001F 
                 ; 0000 0020 lcd_gotoxy(0,1);
000098 e0e0      	LDI  R30,LOW(0)
000099 93ea      	ST   -Y,R30
00009a e0a1      	LDI  R26,LOW(1)
00009b d028      	RCALL _lcd_gotoxy
                 ; 0000 0021 lcd_puts("Section 3!");
                +
00009c e6ac     +LDI R26 , LOW ( _0x6 + ( 12 ) )
00009d e0b1     +LDI R27 , HIGH ( _0x6 + ( 12 ) )
                 	__POINTW2MN _0x6,12
00009e d054      	RCALL _lcd_puts
                 ; 0000 0022 delay_ms(1000);
00009f d203      	RCALL SUBOPT_0x0
                 ; 0000 0023 lcd_clear();
                 ; 0000 0024 
                 ; 0000 0025 
                 ; 0000 0026 }
0000a0 cfe2      	RJMP _0x3
                 ; 0000 0027 }
                 _0x7:
0000a1 cfff      	RJMP _0x7
                 ; .FEND
                 
                 	.DSEG
                 _0x6:
000160           	.BYTE 0x17
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0000a2 931a      	ST   -Y,R17
0000a3 2f1a      	MOV  R17,R26
0000a4 b3eb      	IN   R30,0x1B
0000a5 70ef      	ANDI R30,LOW(0xF)
0000a6 2fae      	MOV  R26,R30
0000a7 2fe1      	MOV  R30,R17
0000a8 7fe0      	ANDI R30,LOW(0xF0)
0000a9 2bea      	OR   R30,R26
0000aa bbeb      	OUT  0x1B,R30
                +
0000ab e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000ac 958a     +DEC R24
0000ad f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000ae 9ada      	SBI  0x1B,2
                +
0000af e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000b0 958a     +DEC R24
0000b1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000b2 98da      	CBI  0x1B,2
                +
0000b3 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000b4 958a     +DEC R24
0000b5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000b6 c074      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000b7 93aa      	ST   -Y,R26
0000b8 81a8      	LD   R26,Y
0000b9 dfe8      	RCALL __lcd_write_nibble_G100
0000ba 81e8          ld    r30,y
0000bb 95e2          swap  r30
0000bc 83e8          st    y,r30
0000bd 81a8      	LD   R26,Y
0000be dfe3      	RCALL __lcd_write_nibble_G100
                +
0000bf e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0000c0 958a     +DEC R24
0000c1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0000c2 9621      	ADIW R28,1
0000c3 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000c4 931a      	ST   -Y,R17
0000c5 930a      	ST   -Y,R16
0000c6 2f1a      	MOV  R17,R26
0000c7 810a      	LDD  R16,Y+2
0000c8 2fe1      	MOV  R30,R17
0000c9 e0f0      	LDI  R31,0
0000ca 58e9      	SUBI R30,LOW(-__base_y_G100)
0000cb 4ffe      	SBCI R31,HIGH(-__base_y_G100)
0000cc 81e0      	LD   R30,Z
0000cd 0fe0      	ADD  R30,R16
0000ce 2fae      	MOV  R26,R30
0000cf dfe7      	RCALL __lcd_write_data
0000d0 2e50      	MOV  R5,R16
0000d1 2e41      	MOV  R4,R17
0000d2 8119      	LDD  R17,Y+1
0000d3 8108      	LDD  R16,Y+0
0000d4 9623      	ADIW R28,3
0000d5 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0000d6 e0a2      	LDI  R26,LOW(2)
0000d7 d1cf      	RCALL SUBOPT_0x1
0000d8 e0ac      	LDI  R26,LOW(12)
0000d9 dfdd      	RCALL __lcd_write_data
0000da e0a1      	LDI  R26,LOW(1)
0000db d1cb      	RCALL SUBOPT_0x1
0000dc e0e0      	LDI  R30,LOW(0)
0000dd 2e4e      	MOV  R4,R30
0000de 2e5e      	MOV  R5,R30
0000df 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0000e0 931a      	ST   -Y,R17
0000e1 2f1a      	MOV  R17,R26
0000e2 301a      	CPI  R17,10
0000e3 f011      	BREQ _0x2000005
0000e4 1457      	CP   R5,R7
0000e5 f038      	BRLO _0x2000004
                 _0x2000005:
0000e6 e0e0      	LDI  R30,LOW(0)
0000e7 93ea      	ST   -Y,R30
0000e8 9443      	INC  R4
0000e9 2da4      	MOV  R26,R4
0000ea dfd9      	RCALL _lcd_gotoxy
0000eb 301a      	CPI  R17,10
0000ec f1f1      	BREQ _0x2080001
                 _0x2000004:
0000ed 9453      	INC  R5
0000ee 9ad8      	SBI  0x1B,0
0000ef 2fa1      	MOV  R26,R17
0000f0 dfc6      	RCALL __lcd_write_data
0000f1 98d8      	CBI  0x1B,0
0000f2 c038      	RJMP _0x2080001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
0000f3 d1dd      	RCALL __SAVELOCR4
0000f4 019d      	MOVW R18,R26
                 _0x2000008:
0000f5 01d9      	MOVW R26,R18
                +
0000f6 5f2f     +SUBI R18 , LOW ( - 1 )
0000f7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0000f8 91ec      	LD   R30,X
0000f9 2f1e      	MOV  R17,R30
0000fa 30e0      	CPI  R30,0
0000fb f019      	BREQ _0x200000A
0000fc 2fa1      	MOV  R26,R17
0000fd dfe2      	RCALL _lcd_putchar
0000fe cff6      	RJMP _0x2000008
                 _0x200000A:
0000ff d1d8      	RCALL __LOADLOCR4
000100 9624      	ADIW R28,4
000101 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000102 931a      	ST   -Y,R17
000103 2f1a      	MOV  R17,R26
000104 b3ea      	IN   R30,0x1A
000105 6fe0      	ORI  R30,LOW(0xF0)
000106 bbea      	OUT  0x1A,R30
000107 9ad2      	SBI  0x1A,2
000108 9ad0      	SBI  0x1A,0
000109 9ad1      	SBI  0x1A,1
00010a 98da      	CBI  0x1B,2
00010b 98d8      	CBI  0x1B,0
00010c 98d9      	CBI  0x1B,1
00010d 2e71      	MOV  R7,R17
00010e 2fe1      	MOV  R30,R17
00010f 58e0      	SUBI R30,-LOW(128)
                +
000110 93e0 0179+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000112 2fe1      	MOV  R30,R17
000113 54e0      	SUBI R30,-LOW(192)
                +
000114 93e0 017a+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000116 e1a4      	LDI  R26,LOW(20)
000117 e0b0      	LDI  R27,0
000118 d1d1      	RCALL _delay_ms
000119 d191      	RCALL SUBOPT_0x2
00011a d190      	RCALL SUBOPT_0x2
00011b d18f      	RCALL SUBOPT_0x2
00011c e2a0      	LDI  R26,LOW(32)
00011d df84      	RCALL __lcd_write_nibble_G100
                +
00011e ec88     +LDI R24 , LOW ( 200 )
00011f e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000120 9701     +SBIW R24 , 1
000121 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000122 e2a8      	LDI  R26,LOW(40)
000123 df93      	RCALL __lcd_write_data
000124 e0a4      	LDI  R26,LOW(4)
000125 df91      	RCALL __lcd_write_data
000126 e8a5      	LDI  R26,LOW(133)
000127 df8f      	RCALL __lcd_write_data
000128 e0a6      	LDI  R26,LOW(6)
000129 df8d      	RCALL __lcd_write_data
00012a dfab      	RCALL _lcd_clear
                 _0x2080001:
00012b 9119      	LD   R17,Y+
00012c 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 __print_G101:
                 ; .FSTART __print_G101
00012d 93ba      	ST   -Y,R27
00012e 93aa      	ST   -Y,R26
00012f 9726      	SBIW R28,6
000130 d19e      	RCALL __SAVELOCR6
000131 e010      	LDI  R17,0
000132 85ac      	LDD  R26,Y+12
000133 85bd      	LDD  R27,Y+12+1
000134 e0e0      	LDI  R30,LOW(0)
000135 e0f0      	LDI  R31,HIGH(0)
000136 93ed      	ST   X+,R30
000137 93fc      	ST   X,R31
                 _0x2020016:
000138 89ea      	LDD  R30,Y+18
000139 89fb      	LDD  R31,Y+18+1
00013a 9631      	ADIW R30,1
00013b 8bea      	STD  Y+18,R30
00013c 8bfb      	STD  Y+18+1,R31
00013d 9731      	SBIW R30,1
00013e 91e4      	LPM  R30,Z
00013f 2f2e      	MOV  R18,R30
000140 30e0      	CPI  R30,0
000141 f409      	BRNE PC+2
000142 c10b      	RJMP _0x2020018
000143 2fe1      	MOV  R30,R17
000144 30e0      	CPI  R30,0
000145 f431      	BRNE _0x202001C
000146 3225      	CPI  R18,37
000147 f411      	BRNE _0x202001D
000148 e011      	LDI  R17,LOW(1)
000149 c001      	RJMP _0x202001E
                 _0x202001D:
00014a d167      	RCALL SUBOPT_0x3
                 _0x202001E:
00014b c101      	RJMP _0x202001B
                 _0x202001C:
00014c 30e1      	CPI  R30,LOW(0x1)
00014d f4a1      	BRNE _0x202001F
00014e 3225      	CPI  R18,37
00014f f411      	BRNE _0x2020020
000150 d161      	RCALL SUBOPT_0x3
000151 c0fa      	RJMP _0x20200CC
                 _0x2020020:
000152 e012      	LDI  R17,LOW(2)
000153 e040      	LDI  R20,LOW(0)
000154 e000      	LDI  R16,LOW(0)
000155 322d      	CPI  R18,45
000156 f411      	BRNE _0x2020021
000157 e001      	LDI  R16,LOW(1)
000158 c0f4      	RJMP _0x202001B
                 _0x2020021:
000159 322b      	CPI  R18,43
00015a f411      	BRNE _0x2020022
00015b e24b      	LDI  R20,LOW(43)
00015c c0f0      	RJMP _0x202001B
                 _0x2020022:
00015d 3220      	CPI  R18,32
00015e f411      	BRNE _0x2020023
00015f e240      	LDI  R20,LOW(32)
000160 c0ec      	RJMP _0x202001B
                 _0x2020023:
000161 c002      	RJMP _0x2020024
                 _0x202001F:
000162 30e2      	CPI  R30,LOW(0x2)
000163 f439      	BRNE _0x2020025
                 _0x2020024:
000164 e050      	LDI  R21,LOW(0)
000165 e013      	LDI  R17,LOW(3)
000166 3320      	CPI  R18,48
000167 f411      	BRNE _0x2020026
000168 6800      	ORI  R16,LOW(128)
000169 c0e3      	RJMP _0x202001B
                 _0x2020026:
00016a c003      	RJMP _0x2020027
                 _0x2020025:
00016b 30e3      	CPI  R30,LOW(0x3)
00016c f009      	BREQ PC+2
00016d c0df      	RJMP _0x202001B
                 _0x2020027:
00016e 3320      	CPI  R18,48
00016f f010      	BRLO _0x202002A
000170 332a      	CPI  R18,58
000171 f008      	BRLO _0x202002B
                 _0x202002A:
000172 c007      	RJMP _0x2020029
                 _0x202002B:
000173 e0aa      	LDI  R26,LOW(10)
000174 9f5a      	MUL  R21,R26
000175 2d50      	MOV  R21,R0
000176 2fe2      	MOV  R30,R18
000177 53e0      	SUBI R30,LOW(48)
000178 0f5e      	ADD  R21,R30
000179 c0d3      	RJMP _0x202001B
                 _0x2020029:
00017a 2fe2      	MOV  R30,R18
00017b 36e3      	CPI  R30,LOW(0x63)
00017c f439      	BRNE _0x202002F
00017d d13b      	RCALL SUBOPT_0x4
00017e 89e8      	LDD  R30,Y+16
00017f 89f9      	LDD  R31,Y+16+1
000180 81a4      	LDD  R26,Z+4
000181 93aa      	ST   -Y,R26
000182 d13c      	RCALL SUBOPT_0x5
000183 c0c8      	RJMP _0x2020030
                 _0x202002F:
000184 37e3      	CPI  R30,LOW(0x73)
000185 f429      	BRNE _0x2020032
000186 d132      	RCALL SUBOPT_0x4
000187 d13d      	RCALL SUBOPT_0x6
000188 d101      	RCALL _strlen
000189 2f1e      	MOV  R17,R30
00018a c007      	RJMP _0x2020033
                 _0x2020032:
00018b 37e0      	CPI  R30,LOW(0x70)
00018c f449      	BRNE _0x2020035
00018d d12b      	RCALL SUBOPT_0x4
00018e d136      	RCALL SUBOPT_0x6
00018f d106      	RCALL _strlenf
000190 2f1e      	MOV  R17,R30
000191 6008      	ORI  R16,LOW(8)
                 _0x2020033:
000192 6002      	ORI  R16,LOW(2)
000193 770f      	ANDI R16,LOW(127)
000194 e030      	LDI  R19,LOW(0)
000195 c03a      	RJMP _0x2020036
                 _0x2020035:
000196 36e4      	CPI  R30,LOW(0x64)
000197 f011      	BREQ _0x2020039
000198 36e9      	CPI  R30,LOW(0x69)
000199 f411      	BRNE _0x202003A
                 _0x2020039:
00019a 6004      	ORI  R16,LOW(4)
00019b c002      	RJMP _0x202003B
                 _0x202003A:
00019c 37e5      	CPI  R30,LOW(0x75)
00019d f431      	BRNE _0x202003C
                 _0x202003B:
00019e e5e4      	LDI  R30,LOW(_tbl10_G101*2)
00019f e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
0001a0 83ee      	STD  Y+6,R30
0001a1 83ff      	STD  Y+6+1,R31
0001a2 e015      	LDI  R17,LOW(5)
0001a3 c00c      	RJMP _0x202003D
                 _0x202003C:
0001a4 35e8      	CPI  R30,LOW(0x58)
0001a5 f411      	BRNE _0x202003F
0001a6 6008      	ORI  R16,LOW(8)
0001a7 c003      	RJMP _0x2020040
                 _0x202003F:
0001a8 37e8      	CPI  R30,LOW(0x78)
0001a9 f009      	BREQ PC+2
0001aa c0a1      	RJMP _0x2020071
                 _0x2020040:
0001ab e5ee      	LDI  R30,LOW(_tbl16_G101*2)
0001ac e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
0001ad 83ee      	STD  Y+6,R30
0001ae 83ff      	STD  Y+6+1,R31
0001af e014      	LDI  R17,LOW(4)
                 _0x202003D:
0001b0 ff02      	SBRS R16,2
0001b1 c015      	RJMP _0x2020042
0001b2 d106      	RCALL SUBOPT_0x4
0001b3 89a8      	LDD  R26,Y+16
0001b4 89b9      	LDD  R27,Y+16+1
0001b5 9614      	ADIW R26,4
0001b6 91ed      	LD   R30,X+
0001b7 91fd      	LD   R31,X+
0001b8 87ea      	STD  Y+10,R30
0001b9 87fb      	STD  Y+10+1,R31
0001ba 85ab      	LDD  R26,Y+11
0001bb 23aa      	TST  R26
0001bc f422      	BRPL _0x2020043
0001bd d11f      	RCALL __ANEGW1
0001be 87ea      	STD  Y+10,R30
0001bf 87fb      	STD  Y+10+1,R31
0001c0 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
0001c1 3040      	CPI  R20,0
0001c2 f011      	BREQ _0x2020044
0001c3 5f1f      	SUBI R17,-LOW(1)
0001c4 c001      	RJMP _0x2020045
                 _0x2020044:
0001c5 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
0001c6 c009      	RJMP _0x2020046
                 _0x2020042:
0001c7 d0f1      	RCALL SUBOPT_0x4
0001c8 89a8      	LDD  R26,Y+16
0001c9 89b9      	LDD  R27,Y+16+1
0001ca 9614      	ADIW R26,4
                +
0001cb 91ed     +LD R30 , X +
0001cc 91fc     +LD R31 , X
0001cd 9711     +SBIW R26 , 1
                 	__GETW1P
0001ce 87ea      	STD  Y+10,R30
0001cf 87fb      	STD  Y+10+1,R31
                 _0x2020046:
                 _0x2020036:
0001d0 fd00      	SBRC R16,0
0001d1 c010      	RJMP _0x2020047
                 _0x2020048:
0001d2 1715      	CP   R17,R21
0001d3 f470      	BRSH _0x202004A
0001d4 ff07      	SBRS R16,7
0001d5 c008      	RJMP _0x202004B
0001d6 ff02      	SBRS R16,2
0001d7 c004      	RJMP _0x202004C
0001d8 7f0b      	ANDI R16,LOW(251)
0001d9 2f24      	MOV  R18,R20
0001da 5011      	SUBI R17,LOW(1)
0001db c001      	RJMP _0x202004D
                 _0x202004C:
0001dc e320      	LDI  R18,LOW(48)
                 _0x202004D:
0001dd c001      	RJMP _0x202004E
                 _0x202004B:
0001de e220      	LDI  R18,LOW(32)
                 _0x202004E:
0001df d0d2      	RCALL SUBOPT_0x3
0001e0 5051      	SUBI R21,LOW(1)
0001e1 cff0      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
0001e2 2f31      	MOV  R19,R17
0001e3 ff01      	SBRS R16,1
0001e4 c016      	RJMP _0x202004F
                 _0x2020050:
0001e5 3030      	CPI  R19,0
0001e6 f099      	BREQ _0x2020052
0001e7 ff03      	SBRS R16,3
0001e8 c006      	RJMP _0x2020053
0001e9 81ee      	LDD  R30,Y+6
0001ea 81ff      	LDD  R31,Y+6+1
0001eb 9125      	LPM  R18,Z+
0001ec 83ee      	STD  Y+6,R30
0001ed 83ff      	STD  Y+6+1,R31
0001ee c005      	RJMP _0x2020054
                 _0x2020053:
0001ef 81ae      	LDD  R26,Y+6
0001f0 81bf      	LDD  R27,Y+6+1
0001f1 912d      	LD   R18,X+
0001f2 83ae      	STD  Y+6,R26
0001f3 83bf      	STD  Y+6+1,R27
                 _0x2020054:
0001f4 d0bd      	RCALL SUBOPT_0x3
0001f5 3050      	CPI  R21,0
0001f6 f009      	BREQ _0x2020055
0001f7 5051      	SUBI R21,LOW(1)
                 _0x2020055:
0001f8 5031      	SUBI R19,LOW(1)
0001f9 cfeb      	RJMP _0x2020050
                 _0x2020052:
0001fa c048      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
0001fb e320      	LDI  R18,LOW(48)
0001fc 81ee      	LDD  R30,Y+6
0001fd 81ff      	LDD  R31,Y+6+1
0001fe d0e2      	RCALL __GETW1PF
0001ff 87e8      	STD  Y+8,R30
000200 87f9      	STD  Y+8+1,R31
000201 81ee      	LDD  R30,Y+6
000202 81ff      	LDD  R31,Y+6+1
000203 9632      	ADIW R30,2
000204 83ee      	STD  Y+6,R30
000205 83ff      	STD  Y+6+1,R31
                 _0x202005A:
000206 85e8      	LDD  R30,Y+8
000207 85f9      	LDD  R31,Y+8+1
000208 85aa      	LDD  R26,Y+10
000209 85bb      	LDD  R27,Y+10+1
00020a 17ae      	CP   R26,R30
00020b 07bf      	CPC  R27,R31
00020c f050      	BRLO _0x202005C
00020d 5f2f      	SUBI R18,-LOW(1)
00020e 85a8      	LDD  R26,Y+8
00020f 85b9      	LDD  R27,Y+8+1
000210 85ea      	LDD  R30,Y+10
000211 85fb      	LDD  R31,Y+10+1
000212 1bea      	SUB  R30,R26
000213 0bfb      	SBC  R31,R27
000214 87ea      	STD  Y+10,R30
000215 87fb      	STD  Y+10+1,R31
000216 cfef      	RJMP _0x202005A
                 _0x202005C:
000217 332a      	CPI  R18,58
000218 f028      	BRLO _0x202005D
000219 ff03      	SBRS R16,3
00021a c002      	RJMP _0x202005E
00021b 5f29      	SUBI R18,-LOW(7)
00021c c001      	RJMP _0x202005F
                 _0x202005E:
00021d 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
00021e fd04      	SBRC R16,4
00021f c019      	RJMP _0x2020061
000220 3321      	CPI  R18,49
000221 f420      	BRSH _0x2020063
000222 85a8      	LDD  R26,Y+8
000223 85b9      	LDD  R27,Y+8+1
000224 9711      	SBIW R26,1
000225 f409      	BRNE _0x2020062
                 _0x2020063:
000226 c009      	RJMP _0x20200CD
                 _0x2020062:
000227 1753      	CP   R21,R19
000228 f010      	BRLO _0x2020067
000229 ff00      	SBRS R16,0
00022a c001      	RJMP _0x2020068
                 _0x2020067:
00022b c011      	RJMP _0x2020066
                 _0x2020068:
00022c e220      	LDI  R18,LOW(32)
00022d ff07      	SBRS R16,7
00022e c00a      	RJMP _0x2020069
00022f e320      	LDI  R18,LOW(48)
                 _0x20200CD:
000230 6100      	ORI  R16,LOW(16)
000231 ff02      	SBRS R16,2
000232 c006      	RJMP _0x202006A
000233 7f0b      	ANDI R16,LOW(251)
000234 934a      	ST   -Y,R20
000235 d089      	RCALL SUBOPT_0x5
000236 3050      	CPI  R21,0
000237 f009      	BREQ _0x202006B
000238 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000239 d078      	RCALL SUBOPT_0x3
00023a 3050      	CPI  R21,0
00023b f009      	BREQ _0x202006C
00023c 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
00023d 5031      	SUBI R19,LOW(1)
00023e 85a8      	LDD  R26,Y+8
00023f 85b9      	LDD  R27,Y+8+1
000240 9712      	SBIW R26,2
000241 f008      	BRLO _0x2020059
000242 cfb8      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
000243 ff00      	SBRS R16,0
000244 c007      	RJMP _0x202006D
                 _0x202006E:
000245 3050      	CPI  R21,0
000246 f029      	BREQ _0x2020070
000247 5051      	SUBI R21,LOW(1)
000248 e2e0      	LDI  R30,LOW(32)
000249 93ea      	ST   -Y,R30
00024a d074      	RCALL SUBOPT_0x5
00024b cff9      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
00024c e010      	LDI  R17,LOW(0)
                 _0x202001B:
00024d ceea      	RJMP _0x2020016
                 _0x2020018:
00024e 85ac      	LDD  R26,Y+12
00024f 85bd      	LDD  R27,Y+12+1
000250 91ed      	LD   R30,X+
000251 91fd      	LD   R31,X+
000252 d083      	RCALL __LOADLOCR6
000253 9664      	ADIW R28,20
000254 9508      	RET
                 ; .FEND
                 _put_lcd_G101:
                 ; .FSTART _put_lcd_G101
000255 d07b      	RCALL __SAVELOCR4
000256 018d      	MOVW R16,R26
000257 813c      	LDD  R19,Y+4
000258 2fa3      	MOV  R26,R19
000259 de86      	RCALL _lcd_putchar
00025a 01d8      	MOVW R26,R16
00025b 91ed      	LD   R30,X+
00025c 91fd      	LD   R31,X+
00025d 9631      	ADIW R30,1
00025e 93fe      	ST   -X,R31
00025f 93ee      	ST   -X,R30
000260 d077      	RCALL __LOADLOCR4
000261 9625      	ADIW R28,5
000262 9508      	RET
                 ; .FEND
                 _lcd_printf:
                 ; .FSTART _lcd_printf
000263 92ff      	PUSH R15
000264 2ef8      	MOV  R15,R24
000265 9726      	SBIW R28,6
000266 931a      	ST   -Y,R17
000267 930a      	ST   -Y,R16
000268 01de      	MOVW R26,R28
000269 9614      	ADIW R26,4
                +
00026a 2400     +CLR R0
00026b 0daf     +ADD R26 , R15
00026c 1db0     +ADC R27 , R0
                 	__ADDW2R15
00026d 018d      	MOVW R16,R26
00026e e0e0      	LDI  R30,LOW(0)
00026f 83ec      	STD  Y+4,R30
000270 83ed      	STD  Y+4+1,R30
000271 83ee      	STD  Y+6,R30
000272 83ef      	STD  Y+6+1,R30
000273 01de      	MOVW R26,R28
000274 9618      	ADIW R26,8
                +
000275 2400     +CLR R0
000276 0daf     +ADD R26 , R15
000277 1db0     +ADC R27 , R0
                 	__ADDW2R15
000278 91ed      	LD   R30,X+
000279 91fd      	LD   R31,X+
00027a 93fa      	ST   -Y,R31
00027b 93ea      	ST   -Y,R30
00027c 931a      	ST   -Y,R17
00027d 930a      	ST   -Y,R16
00027e e5e5      	LDI  R30,LOW(_put_lcd_G101)
00027f e0f2      	LDI  R31,HIGH(_put_lcd_G101)
000280 93fa      	ST   -Y,R31
000281 93ea      	ST   -Y,R30
000282 01de      	MOVW R26,R28
000283 9618      	ADIW R26,8
000284 dea8      	RCALL __print_G101
000285 8119      	LDD  R17,Y+1
000286 8108      	LDD  R16,Y+0
000287 9628      	ADIW R28,8
000288 90ff      	POP  R15
000289 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00028a 93ba      	ST   -Y,R27
00028b 93aa      	ST   -Y,R26
00028c 91a9          ld   r26,y+
00028d 91b9          ld   r27,y+
00028e 27ee          clr  r30
00028f 27ff          clr  r31
                 strlen0:
000290 916d          ld   r22,x+
000291 2366          tst  r22
000292 f011          breq strlen1
000293 9631          adiw r30,1
000294 cffb          rjmp strlen0
                 strlen1:
000295 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
000296 93ba      	ST   -Y,R27
000297 93aa      	ST   -Y,R26
000298 27aa          clr  r26
000299 27bb          clr  r27
00029a 91e9          ld   r30,y+
00029b 91f9          ld   r31,y+
                 strlenf0:
00029c 9005      	lpm  r0,z+
00029d 2000          tst  r0
00029e f011          breq strlenf1
00029f 9611          adiw r26,1
0002a0 cffb          rjmp strlenf0
                 strlenf1:
0002a1 01fd          movw r30,r26
0002a2 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __base_y_G100:
000177           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x0:
0002a3 eea8      	LDI  R26,LOW(1000)
0002a4 e0b3      	LDI  R27,HIGH(1000)
0002a5 d044      	RCALL _delay_ms
0002a6 ce2f      	RJMP _lcd_clear
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
0002a7 de0f      	RCALL __lcd_write_data
0002a8 e0a3      	LDI  R26,LOW(3)
0002a9 e0b0      	LDI  R27,0
0002aa c03f      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2:
0002ab e3a0      	LDI  R26,LOW(48)
0002ac ddf5      	RCALL __lcd_write_nibble_G100
                +
0002ad ec88     +LDI R24 , LOW ( 200 )
0002ae e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0002af 9701     +SBIW R24 , 1
0002b0 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0002b1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x3:
0002b2 932a      	ST   -Y,R18
0002b3 85ad      	LDD  R26,Y+13
0002b4 85be      	LDD  R27,Y+13+1
0002b5 85ef      	LDD  R30,Y+15
0002b6 89f8      	LDD  R31,Y+15+1
0002b7 9509      	ICALL
0002b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x4:
0002b9 89e8      	LDD  R30,Y+16
0002ba 89f9      	LDD  R31,Y+16+1
0002bb 9734      	SBIW R30,4
0002bc 8be8      	STD  Y+16,R30
0002bd 8bf9      	STD  Y+16+1,R31
0002be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
0002bf 85ad      	LDD  R26,Y+13
0002c0 85be      	LDD  R27,Y+13+1
0002c1 85ef      	LDD  R30,Y+15
0002c2 89f8      	LDD  R31,Y+15+1
0002c3 9509      	ICALL
0002c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
0002c5 89a8      	LDD  R26,Y+16
0002c6 89b9      	LDD  R27,Y+16+1
0002c7 9614      	ADIW R26,4
0002c8 91ed      	LD   R30,X+
0002c9 91fd      	LD   R31,X+
0002ca 83ee      	STD  Y+6,R30
0002cb 83ff      	STD  Y+6+1,R31
0002cc 81ae      	LDD  R26,Y+6
0002cd 81bf      	LDD  R27,Y+6+1
0002ce 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
0002cf 935a      	ST   -Y,R21
                 __SAVELOCR5:
0002d0 934a      	ST   -Y,R20
                 __SAVELOCR4:
0002d1 933a      	ST   -Y,R19
                 __SAVELOCR3:
0002d2 932a      	ST   -Y,R18
                 __SAVELOCR2:
0002d3 931a      	ST   -Y,R17
0002d4 930a      	ST   -Y,R16
0002d5 9508      	RET
                 
                 __LOADLOCR6:
0002d6 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0002d7 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0002d8 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0002d9 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0002da 8119      	LDD  R17,Y+1
0002db 8108      	LD   R16,Y
0002dc 9508      	RET
                 
                 __ANEGW1:
0002dd 95f1      	NEG  R31
0002de 95e1      	NEG  R30
0002df 40f0      	SBCI R31,0
0002e0 9508      	RET
                 
                 __GETW1PF:
0002e1 9005      	LPM  R0,Z+
0002e2 91f4      	LPM  R31,Z
0002e3 2de0      	MOV  R30,R0
0002e4 9508      	RET
                 
                 __PUTPARD1:
0002e5 937a      	ST   -Y,R23
0002e6 936a      	ST   -Y,R22
0002e7 93fa      	ST   -Y,R31
0002e8 93ea      	ST   -Y,R30
0002e9 9508      	RET
                 
                 _delay_ms:
0002ea 9610      	adiw r26,0
0002eb f039      	breq __delay_ms1
                 __delay_ms0:
0002ec 95a8      	wdr
                +
0002ed ed80     +LDI R24 , LOW ( 0x7D0 )
0002ee e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0002ef 9701     +SBIW R24 , 1
0002f0 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0002f1 9711      	sbiw r26,1
0002f2 f7c9      	brne __delay_ms0
                 __delay_ms1:
0002f3 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  13 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  37 r17:  43 r18:  30 r19:  11 r20:   9 r21:  17 r22:   6 r23:   2 
r24:  23 r25:   5 r26:  84 r27:  31 r28:  13 r29:   1 r30: 130 r31:  52 
x  :  22 y  : 136 z  :  14 
Registers used: 25 out of 35 (71.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   4 
adiw  :  19 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  16 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   0 brmi  :   0 brne  :  28 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  11 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   1 cpi   :  32 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  22 ld    :  25 ldd   :  59 ldi   :  84 
lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  32 movw  :  12 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :   8 pop   :   1 push  :   1 rcall :  59 ret   :  21 
reti  :   0 rjmp  :  57 rol   :   0 ror   :   0 sbc   :   1 sbci  :   3 
sbi   :   5 sbic  :   0 sbis  :   0 sbiw  :  14 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  46 std   :  30 sts   :   2 sub   :   1 subi  :  18 swap  :   1 
tst   :   3 wdr   :   1 
Instructions used: 50 out of 116 (43.1%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0005e8   1430     82   1512   16384   9.2%
[.dseg] 0x000060 0x00017b      0     27     27    1024   2.6%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 3 warnings
