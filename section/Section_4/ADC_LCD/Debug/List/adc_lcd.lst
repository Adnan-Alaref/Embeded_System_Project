
AVRASM ver. 2.1.30  C:\Users\Laptop Market\Desktop\ADC_LCD\Debug\List\adc_lcd.asm Wed Nov 10 11:30:55 2021

C:\Users\Laptop Market\Desktop\ADC_LCD\Debug\List\adc_lcd.asm(1414): warning: Register r5 already defined by the .DEF directive
C:\Users\Laptop Market\Desktop\ADC_LCD\Debug\List\adc_lcd.asm(1415): warning: Register r4 already defined by the .DEF directive
C:\Users\Laptop Market\Desktop\ADC_LCD\Debug\List\adc_lcd.asm(1416): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.46a Evaluation
                 ;(C) Copyright 1998-2021 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0045 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 4441
000034 2043
000035 4843
000036 2030      	.DB  0x41,0x44,0x43,0x20,0x43,0x48,0x30,0x20
000037 203d
000038 7525
000039 4100
00003a 4344      	.DB  0x3D,0x20,0x25,0x75,0x0,0x41,0x44,0x43
00003b 4320
00003c 3148
00003d 3d20
00003e 2520      	.DB  0x20,0x43,0x48,0x31,0x20,0x3D,0x20,0x25
00003f 0075      	.DB  0x75,0x0
                 _0x2000003:
000040 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000041 0002      	.DW  0x02
000042 0160      	.DW  __base_y_G100
000043 0080      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000044 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000045 94f8      	CLI
000046 27ee      	CLR  R30
000047 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000048 e0f1      	LDI  R31,1
000049 bffb      	OUT  GICR,R31
00004a bfeb      	OUT  GICR,R30
00004b bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00004c e08d      	LDI  R24,(14-2)+1
00004d e0a2      	LDI  R26,2
00004e 27bb      	CLR  R27
                 __CLEAR_REG:
00004f 93ed      	ST   X+,R30
000050 958a      	DEC  R24
000051 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000052 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000053 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000054 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000055 93ed      	ST   X+,R30
000056 9701      	SBIW R24,1
000057 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000058 e8e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000059 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00005a 9185      	LPM  R24,Z+
00005b 9195      	LPM  R25,Z+
00005c 9700      	SBIW R24,0
00005d f061      	BREQ __GLOBAL_INI_END
00005e 91a5      	LPM  R26,Z+
00005f 91b5      	LPM  R27,Z+
000060 9005      	LPM  R0,Z+
000061 9015      	LPM  R1,Z+
000062 01bf      	MOVW R22,R30
000063 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000064 9005      	LPM  R0,Z+
000065 920d      	ST   X+,R0
000066 9701      	SBIW R24,1
000067 f7e1      	BRNE __GLOBAL_INI_LOOP
000068 01fb      	MOVW R30,R22
000069 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00006a e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00006b bfed      	OUT  SPL,R30
00006c e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00006d bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00006e e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006f e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000070 940c 0072 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;unsigned int ADC(unsigned char channel);
                 ;void main(void)
                 ; 0000 000F {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 0010 
                 ; 0000 0011 unsigned int read;
                 ; 0000 0012 lcd_init(16);
                 ;	read -> R16,R17
000072 e1a0      	LDI  R26,LOW(16)
000073 d077      	RCALL _lcd_init
                 ; 0000 0013 
                 ; 0000 0014 ADMUX = 0b00000000;
000074 e0e0      	LDI  R30,LOW(0)
000075 b9e7      	OUT  0x7,R30
                 ; 0000 0015 ADCSRA = 0b10000110;
000076 e8e6      	LDI  R30,LOW(134)
000077 b9e6      	OUT  0x6,R30
                 ; 0000 0016 
                 ; 0000 0017 
                 ; 0000 0018 while (1)
                 _0x3:
                 ; 0000 0019 {
                 ; 0000 001A read = ADC(0);
000078 e0a0      	LDI  R26,LOW(0)
000079 d011      	RCALL _ADC
00007a 018f      	MOVW R16,R30
                 ; 0000 001B lcd_clear();
00007b d052      	RCALL _lcd_clear
                 ; 0000 001C lcd_printf("ADC CH0 = %u",read);
                +
00007c e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00007d e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00007e d20d      	RCALL SUBOPT_0x0
                 ; 0000 001D delay_ms(1000);
                 ; 0000 001E read = ADC(1);
00007f e0a1      	LDI  R26,LOW(1)
000080 d00a      	RCALL _ADC
000081 018f      	MOVW R16,R30
                 ; 0000 001F lcd_gotoxy(0,1);
000082 e0e0      	LDI  R30,LOW(0)
000083 93ea      	ST   -Y,R30
000084 e0a1      	LDI  R26,LOW(1)
000085 d036      	RCALL _lcd_gotoxy
                 ; 0000 0020 lcd_printf("ADC CH1 = %u",read);
                +
000086 e7e3     +LDI R30 , LOW ( 2 * _0x0 + ( 13 ) )
000087 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 13 ) )
                 	__POINTW1FN _0x0,13
000088 d203      	RCALL SUBOPT_0x0
                 ; 0000 0021 delay_ms(1000);
                 ; 0000 0022 }
000089 cfee      	RJMP _0x3
                 ; 0000 0023 }
                 _0x6:
00008a cfff      	RJMP _0x6
                 ; .FEND
                 ;unsigned int ADC(unsigned char channel)
                 ; 0000 0026 {
                 _ADC:
                 ; .FSTART _ADC
                 ; 0000 0027 ADMUX = (ADMUX & 0b11100000) | channel;
00008b 931a      	ST   -Y,R17
00008c 2f1a      	MOV  R17,R26
                 ;	channel -> R17
00008d b1e7      	IN   R30,0x7
00008e 7ee0      	ANDI R30,LOW(0xE0)
00008f 2be1      	OR   R30,R17
000090 b9e7      	OUT  0x7,R30
                 ; 0000 0028 delay_us(10);
                +
000091 e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
000092 958a     +DEC R24
000093 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 0029 ADCSRA.6 = 1;   //Start conversion
000094 9a36      	SBI  0x6,6
                 ; 0000 002A while(ADCSRA.6 == 1);  //Wait till conversion ends
                 _0x9:
000095 9936      	SBIC 0x6,6
000096 cffe      	RJMP _0x9
                 ; 0000 002B return ADCW; // return ADCL|(DCH<<8)
000097 b1e4      	IN   R30,0x4
000098 b1f5      	IN   R31,0x4+1
000099 c07a      	RJMP _0x2080001
                 ; 0000 002C }
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
00009a 931a      	ST   -Y,R17
00009b 2f1a      	MOV  R17,R26
00009c b3e5      	IN   R30,0x15
00009d 70ef      	ANDI R30,LOW(0xF)
00009e 2fae      	MOV  R26,R30
00009f 2fe1      	MOV  R30,R17
0000a0 7fe0      	ANDI R30,LOW(0xF0)
0000a1 2bea      	OR   R30,R26
0000a2 bbe5      	OUT  0x15,R30
                +
0000a3 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000a4 958a     +DEC R24
0000a5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000a6 9aaa      	SBI  0x15,2
                +
0000a7 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000a8 958a     +DEC R24
0000a9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000aa 98aa      	CBI  0x15,2
                +
0000ab e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0000ac 958a     +DEC R24
0000ad f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0000ae c065      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0000af 93aa      	ST   -Y,R26
0000b0 81a8      	LD   R26,Y
0000b1 dfe8      	RCALL __lcd_write_nibble_G100
0000b2 81e8          ld    r30,y
0000b3 95e2          swap  r30
0000b4 83e8          st    y,r30
0000b5 81a8      	LD   R26,Y
0000b6 dfe3      	RCALL __lcd_write_nibble_G100
                +
0000b7 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0000b8 958a     +DEC R24
0000b9 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0000ba 9621      	ADIW R28,1
0000bb 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0000bc 931a      	ST   -Y,R17
0000bd 930a      	ST   -Y,R16
0000be 2f1a      	MOV  R17,R26
0000bf 810a      	LDD  R16,Y+2
0000c0 2fe1      	MOV  R30,R17
0000c1 e0f0      	LDI  R31,0
0000c2 5ae0      	SUBI R30,LOW(-__base_y_G100)
0000c3 4ffe      	SBCI R31,HIGH(-__base_y_G100)
0000c4 81e0      	LD   R30,Z
0000c5 0fe0      	ADD  R30,R16
0000c6 2fae      	MOV  R26,R30
0000c7 dfe7      	RCALL __lcd_write_data
0000c8 2e50      	MOV  R5,R16
0000c9 2e41      	MOV  R4,R17
0000ca 8119      	LDD  R17,Y+1
0000cb 8108      	LDD  R16,Y+0
0000cc 9623      	ADIW R28,3
0000cd 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0000ce e0a2      	LDI  R26,LOW(2)
0000cf d1c8      	RCALL SUBOPT_0x1
0000d0 e0ac      	LDI  R26,LOW(12)
0000d1 dfdd      	RCALL __lcd_write_data
0000d2 e0a1      	LDI  R26,LOW(1)
0000d3 d1c4      	RCALL SUBOPT_0x1
0000d4 e0e0      	LDI  R30,LOW(0)
0000d5 2e4e      	MOV  R4,R30
0000d6 2e5e      	MOV  R5,R30
0000d7 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
0000d8 931a      	ST   -Y,R17
0000d9 2f1a      	MOV  R17,R26
0000da 301a      	CPI  R17,10
0000db f011      	BREQ _0x2000005
0000dc 1457      	CP   R5,R7
0000dd f038      	BRLO _0x2000004
                 _0x2000005:
0000de e0e0      	LDI  R30,LOW(0)
0000df 93ea      	ST   -Y,R30
0000e0 9443      	INC  R4
0000e1 2da4      	MOV  R26,R4
0000e2 dfd9      	RCALL _lcd_gotoxy
0000e3 301a      	CPI  R17,10
0000e4 f179      	BREQ _0x2080001
                 _0x2000004:
0000e5 9453      	INC  R5
0000e6 9aa8      	SBI  0x15,0
0000e7 2fa1      	MOV  R26,R17
0000e8 dfc6      	RCALL __lcd_write_data
0000e9 98a8      	CBI  0x15,0
0000ea c029      	RJMP _0x2080001
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
0000eb 931a      	ST   -Y,R17
0000ec 2f1a      	MOV  R17,R26
0000ed b3e4      	IN   R30,0x14
0000ee 6fe0      	ORI  R30,LOW(0xF0)
0000ef bbe4      	OUT  0x14,R30
0000f0 9aa2      	SBI  0x14,2
0000f1 9aa0      	SBI  0x14,0
0000f2 9aa1      	SBI  0x14,1
0000f3 98aa      	CBI  0x15,2
0000f4 98a8      	CBI  0x15,0
0000f5 98a9      	CBI  0x15,1
0000f6 2e71      	MOV  R7,R17
0000f7 2fe1      	MOV  R30,R17
0000f8 58e0      	SUBI R30,-LOW(128)
                +
0000f9 93e0 0162+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
0000fb 2fe1      	MOV  R30,R17
0000fc 54e0      	SUBI R30,-LOW(192)
                +
0000fd 93e0 0163+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
0000ff e1a4      	LDI  R26,LOW(20)
000100 e0b0      	LDI  R27,0
000101 d1d9      	RCALL _delay_ms
000102 d199      	RCALL SUBOPT_0x2
000103 d198      	RCALL SUBOPT_0x2
000104 d197      	RCALL SUBOPT_0x2
000105 e2a0      	LDI  R26,LOW(32)
000106 df93      	RCALL __lcd_write_nibble_G100
                +
000107 ec88     +LDI R24 , LOW ( 200 )
000108 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000109 9701     +SBIW R24 , 1
00010a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00010b e2a8      	LDI  R26,LOW(40)
00010c dfa2      	RCALL __lcd_write_data
00010d e0a4      	LDI  R26,LOW(4)
00010e dfa0      	RCALL __lcd_write_data
00010f e8a5      	LDI  R26,LOW(133)
000110 df9e      	RCALL __lcd_write_data
000111 e0a6      	LDI  R26,LOW(6)
000112 df9c      	RCALL __lcd_write_data
000113 dfba      	RCALL _lcd_clear
                 _0x2080001:
000114 9119      	LD   R17,Y+
000115 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 __print_G101:
                 ; .FSTART __print_G101
000116 93ba      	ST   -Y,R27
000117 93aa      	ST   -Y,R26
000118 9726      	SBIW R28,6
000119 d1a6      	RCALL __SAVELOCR6
00011a e010      	LDI  R17,0
00011b 85ac      	LDD  R26,Y+12
00011c 85bd      	LDD  R27,Y+12+1
00011d e0e0      	LDI  R30,LOW(0)
00011e e0f0      	LDI  R31,HIGH(0)
00011f 93ed      	ST   X+,R30
000120 93fc      	ST   X,R31
                 _0x2020016:
000121 89ea      	LDD  R30,Y+18
000122 89fb      	LDD  R31,Y+18+1
000123 9631      	ADIW R30,1
000124 8bea      	STD  Y+18,R30
000125 8bfb      	STD  Y+18+1,R31
000126 9731      	SBIW R30,1
000127 91e4      	LPM  R30,Z
000128 2f2e      	MOV  R18,R30
000129 30e0      	CPI  R30,0
00012a f409      	BRNE PC+2
00012b c10b      	RJMP _0x2020018
00012c 2fe1      	MOV  R30,R17
00012d 30e0      	CPI  R30,0
00012e f431      	BRNE _0x202001C
00012f 3225      	CPI  R18,37
000130 f411      	BRNE _0x202001D
000131 e011      	LDI  R17,LOW(1)
000132 c001      	RJMP _0x202001E
                 _0x202001D:
000133 d16f      	RCALL SUBOPT_0x3
                 _0x202001E:
000134 c101      	RJMP _0x202001B
                 _0x202001C:
000135 30e1      	CPI  R30,LOW(0x1)
000136 f4a1      	BRNE _0x202001F
000137 3225      	CPI  R18,37
000138 f411      	BRNE _0x2020020
000139 d169      	RCALL SUBOPT_0x3
00013a c0fa      	RJMP _0x20200CC
                 _0x2020020:
00013b e012      	LDI  R17,LOW(2)
00013c e040      	LDI  R20,LOW(0)
00013d e000      	LDI  R16,LOW(0)
00013e 322d      	CPI  R18,45
00013f f411      	BRNE _0x2020021
000140 e001      	LDI  R16,LOW(1)
000141 c0f4      	RJMP _0x202001B
                 _0x2020021:
000142 322b      	CPI  R18,43
000143 f411      	BRNE _0x2020022
000144 e24b      	LDI  R20,LOW(43)
000145 c0f0      	RJMP _0x202001B
                 _0x2020022:
000146 3220      	CPI  R18,32
000147 f411      	BRNE _0x2020023
000148 e240      	LDI  R20,LOW(32)
000149 c0ec      	RJMP _0x202001B
                 _0x2020023:
00014a c002      	RJMP _0x2020024
                 _0x202001F:
00014b 30e2      	CPI  R30,LOW(0x2)
00014c f439      	BRNE _0x2020025
                 _0x2020024:
00014d e050      	LDI  R21,LOW(0)
00014e e013      	LDI  R17,LOW(3)
00014f 3320      	CPI  R18,48
000150 f411      	BRNE _0x2020026
000151 6800      	ORI  R16,LOW(128)
000152 c0e3      	RJMP _0x202001B
                 _0x2020026:
000153 c003      	RJMP _0x2020027
                 _0x2020025:
000154 30e3      	CPI  R30,LOW(0x3)
000155 f009      	BREQ PC+2
000156 c0df      	RJMP _0x202001B
                 _0x2020027:
000157 3320      	CPI  R18,48
000158 f010      	BRLO _0x202002A
000159 332a      	CPI  R18,58
00015a f008      	BRLO _0x202002B
                 _0x202002A:
00015b c007      	RJMP _0x2020029
                 _0x202002B:
00015c e0aa      	LDI  R26,LOW(10)
00015d 9f5a      	MUL  R21,R26
00015e 2d50      	MOV  R21,R0
00015f 2fe2      	MOV  R30,R18
000160 53e0      	SUBI R30,LOW(48)
000161 0f5e      	ADD  R21,R30
000162 c0d3      	RJMP _0x202001B
                 _0x2020029:
000163 2fe2      	MOV  R30,R18
000164 36e3      	CPI  R30,LOW(0x63)
000165 f439      	BRNE _0x202002F
000166 d143      	RCALL SUBOPT_0x4
000167 89e8      	LDD  R30,Y+16
000168 89f9      	LDD  R31,Y+16+1
000169 81a4      	LDD  R26,Z+4
00016a 93aa      	ST   -Y,R26
00016b d144      	RCALL SUBOPT_0x5
00016c c0c8      	RJMP _0x2020030
                 _0x202002F:
00016d 37e3      	CPI  R30,LOW(0x73)
00016e f429      	BRNE _0x2020032
00016f d13a      	RCALL SUBOPT_0x4
000170 d145      	RCALL SUBOPT_0x6
000171 d101      	RCALL _strlen
000172 2f1e      	MOV  R17,R30
000173 c007      	RJMP _0x2020033
                 _0x2020032:
000174 37e0      	CPI  R30,LOW(0x70)
000175 f449      	BRNE _0x2020035
000176 d133      	RCALL SUBOPT_0x4
000177 d13e      	RCALL SUBOPT_0x6
000178 d106      	RCALL _strlenf
000179 2f1e      	MOV  R17,R30
00017a 6008      	ORI  R16,LOW(8)
                 _0x2020033:
00017b 6002      	ORI  R16,LOW(2)
00017c 770f      	ANDI R16,LOW(127)
00017d e030      	LDI  R19,LOW(0)
00017e c03a      	RJMP _0x2020036
                 _0x2020035:
00017f 36e4      	CPI  R30,LOW(0x64)
000180 f011      	BREQ _0x2020039
000181 36e9      	CPI  R30,LOW(0x69)
000182 f411      	BRNE _0x202003A
                 _0x2020039:
000183 6004      	ORI  R16,LOW(4)
000184 c002      	RJMP _0x202003B
                 _0x202003A:
000185 37e5      	CPI  R30,LOW(0x75)
000186 f431      	BRNE _0x202003C
                 _0x202003B:
000187 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
000188 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
000189 83ee      	STD  Y+6,R30
00018a 83ff      	STD  Y+6+1,R31
00018b e015      	LDI  R17,LOW(5)
00018c c00c      	RJMP _0x202003D
                 _0x202003C:
00018d 35e8      	CPI  R30,LOW(0x58)
00018e f411      	BRNE _0x202003F
00018f 6008      	ORI  R16,LOW(8)
000190 c003      	RJMP _0x2020040
                 _0x202003F:
000191 37e8      	CPI  R30,LOW(0x78)
000192 f009      	BREQ PC+2
000193 c0a1      	RJMP _0x2020071
                 _0x2020040:
000194 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000195 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000196 83ee      	STD  Y+6,R30
000197 83ff      	STD  Y+6+1,R31
000198 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000199 ff02      	SBRS R16,2
00019a c015      	RJMP _0x2020042
00019b d10e      	RCALL SUBOPT_0x4
00019c 89a8      	LDD  R26,Y+16
00019d 89b9      	LDD  R27,Y+16+1
00019e 9614      	ADIW R26,4
00019f 91ed      	LD   R30,X+
0001a0 91fd      	LD   R31,X+
0001a1 87ea      	STD  Y+10,R30
0001a2 87fb      	STD  Y+10+1,R31
0001a3 85ab      	LDD  R26,Y+11
0001a4 23aa      	TST  R26
0001a5 f422      	BRPL _0x2020043
0001a6 d127      	RCALL __ANEGW1
0001a7 87ea      	STD  Y+10,R30
0001a8 87fb      	STD  Y+10+1,R31
0001a9 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
0001aa 3040      	CPI  R20,0
0001ab f011      	BREQ _0x2020044
0001ac 5f1f      	SUBI R17,-LOW(1)
0001ad c001      	RJMP _0x2020045
                 _0x2020044:
0001ae 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
0001af c009      	RJMP _0x2020046
                 _0x2020042:
0001b0 d0f9      	RCALL SUBOPT_0x4
0001b1 89a8      	LDD  R26,Y+16
0001b2 89b9      	LDD  R27,Y+16+1
0001b3 9614      	ADIW R26,4
                +
0001b4 91ed     +LD R30 , X +
0001b5 91fc     +LD R31 , X
0001b6 9711     +SBIW R26 , 1
                 	__GETW1P
0001b7 87ea      	STD  Y+10,R30
0001b8 87fb      	STD  Y+10+1,R31
                 _0x2020046:
                 _0x2020036:
0001b9 fd00      	SBRC R16,0
0001ba c010      	RJMP _0x2020047
                 _0x2020048:
0001bb 1715      	CP   R17,R21
0001bc f470      	BRSH _0x202004A
0001bd ff07      	SBRS R16,7
0001be c008      	RJMP _0x202004B
0001bf ff02      	SBRS R16,2
0001c0 c004      	RJMP _0x202004C
0001c1 7f0b      	ANDI R16,LOW(251)
0001c2 2f24      	MOV  R18,R20
0001c3 5011      	SUBI R17,LOW(1)
0001c4 c001      	RJMP _0x202004D
                 _0x202004C:
0001c5 e320      	LDI  R18,LOW(48)
                 _0x202004D:
0001c6 c001      	RJMP _0x202004E
                 _0x202004B:
0001c7 e220      	LDI  R18,LOW(32)
                 _0x202004E:
0001c8 d0da      	RCALL SUBOPT_0x3
0001c9 5051      	SUBI R21,LOW(1)
0001ca cff0      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
0001cb 2f31      	MOV  R19,R17
0001cc ff01      	SBRS R16,1
0001cd c016      	RJMP _0x202004F
                 _0x2020050:
0001ce 3030      	CPI  R19,0
0001cf f099      	BREQ _0x2020052
0001d0 ff03      	SBRS R16,3
0001d1 c006      	RJMP _0x2020053
0001d2 81ee      	LDD  R30,Y+6
0001d3 81ff      	LDD  R31,Y+6+1
0001d4 9125      	LPM  R18,Z+
0001d5 83ee      	STD  Y+6,R30
0001d6 83ff      	STD  Y+6+1,R31
0001d7 c005      	RJMP _0x2020054
                 _0x2020053:
0001d8 81ae      	LDD  R26,Y+6
0001d9 81bf      	LDD  R27,Y+6+1
0001da 912d      	LD   R18,X+
0001db 83ae      	STD  Y+6,R26
0001dc 83bf      	STD  Y+6+1,R27
                 _0x2020054:
0001dd d0c5      	RCALL SUBOPT_0x3
0001de 3050      	CPI  R21,0
0001df f009      	BREQ _0x2020055
0001e0 5051      	SUBI R21,LOW(1)
                 _0x2020055:
0001e1 5031      	SUBI R19,LOW(1)
0001e2 cfeb      	RJMP _0x2020050
                 _0x2020052:
0001e3 c048      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
0001e4 e320      	LDI  R18,LOW(48)
0001e5 81ee      	LDD  R30,Y+6
0001e6 81ff      	LDD  R31,Y+6+1
0001e7 d0ea      	RCALL __GETW1PF
0001e8 87e8      	STD  Y+8,R30
0001e9 87f9      	STD  Y+8+1,R31
0001ea 81ee      	LDD  R30,Y+6
0001eb 81ff      	LDD  R31,Y+6+1
0001ec 9632      	ADIW R30,2
0001ed 83ee      	STD  Y+6,R30
0001ee 83ff      	STD  Y+6+1,R31
                 _0x202005A:
0001ef 85e8      	LDD  R30,Y+8
0001f0 85f9      	LDD  R31,Y+8+1
0001f1 85aa      	LDD  R26,Y+10
0001f2 85bb      	LDD  R27,Y+10+1
0001f3 17ae      	CP   R26,R30
0001f4 07bf      	CPC  R27,R31
0001f5 f050      	BRLO _0x202005C
0001f6 5f2f      	SUBI R18,-LOW(1)
0001f7 85a8      	LDD  R26,Y+8
0001f8 85b9      	LDD  R27,Y+8+1
0001f9 85ea      	LDD  R30,Y+10
0001fa 85fb      	LDD  R31,Y+10+1
0001fb 1bea      	SUB  R30,R26
0001fc 0bfb      	SBC  R31,R27
0001fd 87ea      	STD  Y+10,R30
0001fe 87fb      	STD  Y+10+1,R31
0001ff cfef      	RJMP _0x202005A
                 _0x202005C:
000200 332a      	CPI  R18,58
000201 f028      	BRLO _0x202005D
000202 ff03      	SBRS R16,3
000203 c002      	RJMP _0x202005E
000204 5f29      	SUBI R18,-LOW(7)
000205 c001      	RJMP _0x202005F
                 _0x202005E:
000206 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000207 fd04      	SBRC R16,4
000208 c019      	RJMP _0x2020061
000209 3321      	CPI  R18,49
00020a f420      	BRSH _0x2020063
00020b 85a8      	LDD  R26,Y+8
00020c 85b9      	LDD  R27,Y+8+1
00020d 9711      	SBIW R26,1
00020e f409      	BRNE _0x2020062
                 _0x2020063:
00020f c009      	RJMP _0x20200CD
                 _0x2020062:
000210 1753      	CP   R21,R19
000211 f010      	BRLO _0x2020067
000212 ff00      	SBRS R16,0
000213 c001      	RJMP _0x2020068
                 _0x2020067:
000214 c011      	RJMP _0x2020066
                 _0x2020068:
000215 e220      	LDI  R18,LOW(32)
000216 ff07      	SBRS R16,7
000217 c00a      	RJMP _0x2020069
000218 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
000219 6100      	ORI  R16,LOW(16)
00021a ff02      	SBRS R16,2
00021b c006      	RJMP _0x202006A
00021c 7f0b      	ANDI R16,LOW(251)
00021d 934a      	ST   -Y,R20
00021e d091      	RCALL SUBOPT_0x5
00021f 3050      	CPI  R21,0
000220 f009      	BREQ _0x202006B
000221 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
000222 d080      	RCALL SUBOPT_0x3
000223 3050      	CPI  R21,0
000224 f009      	BREQ _0x202006C
000225 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
000226 5031      	SUBI R19,LOW(1)
000227 85a8      	LDD  R26,Y+8
000228 85b9      	LDD  R27,Y+8+1
000229 9712      	SBIW R26,2
00022a f008      	BRLO _0x2020059
00022b cfb8      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
00022c ff00      	SBRS R16,0
00022d c007      	RJMP _0x202006D
                 _0x202006E:
00022e 3050      	CPI  R21,0
00022f f029      	BREQ _0x2020070
000230 5051      	SUBI R21,LOW(1)
000231 e2e0      	LDI  R30,LOW(32)
000232 93ea      	ST   -Y,R30
000233 d07c      	RCALL SUBOPT_0x5
000234 cff9      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
000235 e010      	LDI  R17,LOW(0)
                 _0x202001B:
000236 ceea      	RJMP _0x2020016
                 _0x2020018:
000237 85ac      	LDD  R26,Y+12
000238 85bd      	LDD  R27,Y+12+1
000239 91ed      	LD   R30,X+
00023a 91fd      	LD   R31,X+
00023b d08b      	RCALL __LOADLOCR6
00023c 9664      	ADIW R28,20
00023d 9508      	RET
                 ; .FEND
                 _put_lcd_G101:
                 ; .FSTART _put_lcd_G101
00023e d083      	RCALL __SAVELOCR4
00023f 018d      	MOVW R16,R26
000240 813c      	LDD  R19,Y+4
000241 2fa3      	MOV  R26,R19
000242 de95      	RCALL _lcd_putchar
000243 01d8      	MOVW R26,R16
000244 91ed      	LD   R30,X+
000245 91fd      	LD   R31,X+
000246 9631      	ADIW R30,1
000247 93fe      	ST   -X,R31
000248 93ee      	ST   -X,R30
000249 d07f      	RCALL __LOADLOCR4
00024a 9625      	ADIW R28,5
00024b 9508      	RET
                 ; .FEND
                 _lcd_printf:
                 ; .FSTART _lcd_printf
00024c 92ff      	PUSH R15
00024d 2ef8      	MOV  R15,R24
00024e 9726      	SBIW R28,6
00024f 931a      	ST   -Y,R17
000250 930a      	ST   -Y,R16
000251 01de      	MOVW R26,R28
000252 9614      	ADIW R26,4
                +
000253 2400     +CLR R0
000254 0daf     +ADD R26 , R15
000255 1db0     +ADC R27 , R0
                 	__ADDW2R15
000256 018d      	MOVW R16,R26
000257 e0e0      	LDI  R30,LOW(0)
000258 83ec      	STD  Y+4,R30
000259 83ed      	STD  Y+4+1,R30
00025a 83ee      	STD  Y+6,R30
00025b 83ef      	STD  Y+6+1,R30
00025c 01de      	MOVW R26,R28
00025d 9618      	ADIW R26,8
                +
00025e 2400     +CLR R0
00025f 0daf     +ADD R26 , R15
000260 1db0     +ADC R27 , R0
                 	__ADDW2R15
000261 91ed      	LD   R30,X+
000262 91fd      	LD   R31,X+
000263 93fa      	ST   -Y,R31
000264 93ea      	ST   -Y,R30
000265 931a      	ST   -Y,R17
000266 930a      	ST   -Y,R16
000267 e3ee      	LDI  R30,LOW(_put_lcd_G101)
000268 e0f2      	LDI  R31,HIGH(_put_lcd_G101)
000269 93fa      	ST   -Y,R31
00026a 93ea      	ST   -Y,R30
00026b 01de      	MOVW R26,R28
00026c 9618      	ADIW R26,8
00026d dea8      	RCALL __print_G101
00026e 8119      	LDD  R17,Y+1
00026f 8108      	LDD  R16,Y+0
000270 9628      	ADIW R28,8
000271 90ff      	POP  R15
000272 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
000273 93ba      	ST   -Y,R27
000274 93aa      	ST   -Y,R26
000275 91a9          ld   r26,y+
000276 91b9          ld   r27,y+
000277 27ee          clr  r30
000278 27ff          clr  r31
                 strlen0:
000279 916d          ld   r22,x+
00027a 2366          tst  r22
00027b f011          breq strlen1
00027c 9631          adiw r30,1
00027d cffb          rjmp strlen0
                 strlen1:
00027e 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00027f 93ba      	ST   -Y,R27
000280 93aa      	ST   -Y,R26
000281 27aa          clr  r26
000282 27bb          clr  r27
000283 91e9          ld   r30,y+
000284 91f9          ld   r31,y+
                 strlenf0:
000285 9005      	lpm  r0,z+
000286 2000          tst  r0
000287 f011          breq strlenf1
000288 9611          adiw r26,1
000289 cffb          rjmp strlenf0
                 strlenf1:
00028a 01fd          movw r30,r26
00028b 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __base_y_G100:
000160           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x0:
00028c 93fa      	ST   -Y,R31
00028d 93ea      	ST   -Y,R30
00028e 01f8      	MOVW R30,R16
00028f 2766      	CLR  R22
000290 2777      	CLR  R23
000291 d044      	RCALL __PUTPARD1
000292 e084      	LDI  R24,4
000293 dfb8      	RCALL _lcd_printf
000294 9626      	ADIW R28,6
000295 eea8      	LDI  R26,LOW(1000)
000296 e0b3      	LDI  R27,HIGH(1000)
000297 c043      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
000298 de16      	RCALL __lcd_write_data
000299 e0a3      	LDI  R26,LOW(3)
00029a e0b0      	LDI  R27,0
00029b c03f      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2:
00029c e3a0      	LDI  R26,LOW(48)
00029d ddfc      	RCALL __lcd_write_nibble_G100
                +
00029e ec88     +LDI R24 , LOW ( 200 )
00029f e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0002a0 9701     +SBIW R24 , 1
0002a1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0002a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x3:
0002a3 932a      	ST   -Y,R18
0002a4 85ad      	LDD  R26,Y+13
0002a5 85be      	LDD  R27,Y+13+1
0002a6 85ef      	LDD  R30,Y+15
0002a7 89f8      	LDD  R31,Y+15+1
0002a8 9509      	ICALL
0002a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x4:
0002aa 89e8      	LDD  R30,Y+16
0002ab 89f9      	LDD  R31,Y+16+1
0002ac 9734      	SBIW R30,4
0002ad 8be8      	STD  Y+16,R30
0002ae 8bf9      	STD  Y+16+1,R31
0002af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
0002b0 85ad      	LDD  R26,Y+13
0002b1 85be      	LDD  R27,Y+13+1
0002b2 85ef      	LDD  R30,Y+15
0002b3 89f8      	LDD  R31,Y+15+1
0002b4 9509      	ICALL
0002b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
0002b6 89a8      	LDD  R26,Y+16
0002b7 89b9      	LDD  R27,Y+16+1
0002b8 9614      	ADIW R26,4
0002b9 91ed      	LD   R30,X+
0002ba 91fd      	LD   R31,X+
0002bb 83ee      	STD  Y+6,R30
0002bc 83ff      	STD  Y+6+1,R31
0002bd 81ae      	LDD  R26,Y+6
0002be 81bf      	LDD  R27,Y+6+1
0002bf 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
0002c0 935a      	ST   -Y,R21
                 __SAVELOCR5:
0002c1 934a      	ST   -Y,R20
                 __SAVELOCR4:
0002c2 933a      	ST   -Y,R19
                 __SAVELOCR3:
0002c3 932a      	ST   -Y,R18
                 __SAVELOCR2:
0002c4 931a      	ST   -Y,R17
0002c5 930a      	ST   -Y,R16
0002c6 9508      	RET
                 
                 __LOADLOCR6:
0002c7 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0002c8 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0002c9 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0002ca 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0002cb 8119      	LDD  R17,Y+1
0002cc 8108      	LD   R16,Y
0002cd 9508      	RET
                 
                 __ANEGW1:
0002ce 95f1      	NEG  R31
0002cf 95e1      	NEG  R30
0002d0 40f0      	SBCI R31,0
0002d1 9508      	RET
                 
                 __GETW1PF:
0002d2 9005      	LPM  R0,Z+
0002d3 91f4      	LPM  R31,Z
0002d4 2de0      	MOV  R30,R0
0002d5 9508      	RET
                 
                 __PUTPARD1:
0002d6 937a      	ST   -Y,R23
0002d7 936a      	ST   -Y,R22
0002d8 93fa      	ST   -Y,R31
0002d9 93ea      	ST   -Y,R30
0002da 9508      	RET
                 
                 _delay_ms:
0002db 9610      	adiw r26,0
0002dc f039      	breq __delay_ms1
                 __delay_ms0:
0002dd 95a8      	wdr
                +
0002de ed80     +LDI R24 , LOW ( 0x7D0 )
0002df e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0002e0 9701     +SBIW R24 , 1
0002e1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0002e2 9711      	sbiw r26,1
0002e3 f7c9      	brne __delay_ms0
                 __delay_ms1:
0002e4 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  13 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  40 r17:  41 r18:  27 r19:  10 r20:   9 r21:  17 r22:   6 r23:   2 
r24:  25 r25:   5 r26:  81 r27:  28 r28:  12 r29:   1 r30: 139 r31:  53 
x  :  21 y  : 137 z  :  14 
Registers used: 25 out of 35 (71.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   4 
adiw  :  18 and   :   0 andi  :   7 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  15 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   0 brmi  :   0 brne  :  29 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   5 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  10 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   1 cpi   :  31 cpse  :   0 dec   :   6 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   5 inc   :   2 jmp   :  22 ld    :  24 ldd   :  59 ldi   :  84 
lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  30 movw  :  13 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   2 
ori   :   7 out   :  11 pop   :   1 push  :   1 rcall :  54 ret   :  20 
reti  :   0 rjmp  :  58 rol   :   0 ror   :   0 sbc   :   1 sbci  :   2 
sbi   :   6 sbic  :   1 sbis  :   0 sbiw  :  14 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  47 std   :  30 sts   :   2 sub   :   1 subi  :  16 swap  :   1 
tst   :   3 wdr   :   1 
Instructions used: 51 out of 116 (44.0%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0005ca   1428     54   1482   16384   9.0%
[.dseg] 0x000060 0x000164      0      4      4    1024   0.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 3 warnings
