
AVRASM ver. 2.1.30  E:\fourth_year\411\embeded\Abdo\myCode\4-Kmap-With_LCD\Debug\List\protuce.asm Fri Nov 19 21:36:20 2021

E:\fourth_year\411\embeded\Abdo\myCode\4-Kmap-With_LCD\Debug\List\protuce.asm(1414): warning: Register r5 already defined by the .DEF directive
E:\fourth_year\411\embeded\Abdo\myCode\4-Kmap-With_LCD\Debug\List\protuce.asm(1415): warning: Register r4 already defined by the .DEF directive
E:\fourth_year\411\embeded\Abdo\myCode\4-Kmap-With_LCD\Debug\List\protuce.asm(1416): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.46a Evaluation
                 ;(C) Copyright 1998-2021 Pavel Haiduc, HP InfoTech S.R.L.
                 ;http://www.hpinfotech.ro
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Mode 2
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETW1P
                 	LD   R30,X+
                 	LD   R31,X
                 	SBIW R26,1
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD1P_INC
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X+
                 	LD   R23,X+
                 	.ENDM
                 
                 	.MACRO __GETD1P_DEC
                 	LD   R23,-X
                 	LD   R22,-X
                 	LD   R31,-X
                 	LD   R30,-X
                 	.ENDM
                 
                 	.MACRO __PUTDP1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTDP1_DEC
                 	ST   -X,R23
                 	ST   -X,R22
                 	ST   -X,R31
                 	ST   -X,R30
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __CPD10
                 	SBIW R30,0
                 	SBCI R22,0
                 	SBCI R23,0
                 	.ENDM
                 
                 	.MACRO __CPD20
                 	SBIW R26,0
                 	SBCI R24,0
                 	SBCI R25,0
                 	.ENDM
                 
                 	.MACRO __ADDD12
                 	ADD  R30,R26
                 	ADC  R31,R27
                 	ADC  R22,R24
                 	ADC  R23,R25
                 	.ENDM
                 
                 	.MACRO __ADDD21
                 	ADD  R26,R30
                 	ADC  R27,R31
                 	ADC  R24,R22
                 	ADC  R25,R23
                 	.ENDM
                 
                 	.MACRO __SUBD12
                 	SUB  R30,R26
                 	SBC  R31,R27
                 	SBC  R22,R24
                 	SBC  R23,R25
                 	.ENDM
                 
                 	.MACRO __SUBD21
                 	SUB  R26,R30
                 	SBC  R27,R31
                 	SBC  R24,R22
                 	SBC  R25,R23
                 	.ENDM
                 
                 	.MACRO __ANDD12
                 	AND  R30,R26
                 	AND  R31,R27
                 	AND  R22,R24
                 	AND  R23,R25
                 	.ENDM
                 
                 	.MACRO __ORD12
                 	OR   R30,R26
                 	OR   R31,R27
                 	OR   R22,R24
                 	OR   R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD12
                 	EOR  R30,R26
                 	EOR  R31,R27
                 	EOR  R22,R24
                 	EOR  R23,R25
                 	.ENDM
                 
                 	.MACRO __XORD21
                 	EOR  R26,R30
                 	EOR  R27,R31
                 	EOR  R24,R22
                 	EOR  R25,R23
                 	.ENDM
                 
                 	.MACRO __COMD1
                 	COM  R30
                 	COM  R31
                 	COM  R22
                 	COM  R23
                 	.ENDM
                 
                 	.MACRO __MULD2_2
                 	LSL  R26
                 	ROL  R27
                 	ROL  R24
                 	ROL  R25
                 	.ENDM
                 
                 	.MACRO __LSRD1
                 	LSR  R23
                 	ROR  R22
                 	ROR  R31
                 	ROR  R30
                 	.ENDM
                 
                 	.MACRO __LSLD1
                 	LSL  R30
                 	ROL  R31
                 	ROL  R22
                 	ROL  R23
                 	.ENDM
                 
                 	.MACRO __ASRB4
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	ASR  R30
                 	.ENDM
                 
                 	.MACRO __ASRW8
                 	MOV  R30,R31
                 	CLR  R31
                 	SBRC R30,7
                 	SER  R31
                 	.ENDM
                 
                 	.MACRO __LSRD16
                 	MOV  R30,R22
                 	MOV  R31,R23
                 	LDI  R22,0
                 	LDI  R23,0
                 	.ENDM
                 
                 	.MACRO __LSLD16
                 	MOV  R22,R30
                 	MOV  R23,R31
                 	LDI  R30,0
                 	LDI  R31,0
                 	.ENDM
                 
                 	.MACRO __CWD1
                 	MOV  R22,R31
                 	ADD  R22,R22
                 	SBC  R22,R22
                 	MOV  R23,R22
                 	.ENDM
                 
                 	.MACRO __CWD2
                 	MOV  R24,R27
                 	ADD  R24,R24
                 	SBC  R24,R24
                 	MOV  R25,R24
                 	.ENDM
                 
                 	.MACRO __SETMSD1
                 	SER  R31
                 	SER  R22
                 	SER  R23
                 	.ENDM
                 
                 	.MACRO __ADDW1R15
                 	CLR  R0
                 	ADD  R30,R15
                 	ADC  R31,R0
                 	.ENDM
                 
                 	.MACRO __ADDW2R15
                 	CLR  R0
                 	ADD  R26,R15
                 	ADC  R27,R0
                 	.ENDM
                 
                 	.MACRO __EQB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __NEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRNE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRGE PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLT PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LEB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GEB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRSH PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LTB12U
                 	CP   R26,R30
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __GTB12U
                 	CP   R30,R26
                 	LDI  R30,1
                 	BRLO PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __CPW01
                 	CLR  R0
                 	CP   R0,R30
                 	CPC  R0,R31
                 	.ENDM
                 
                 	.MACRO __CPW02
                 	CLR  R0
                 	CP   R0,R26
                 	CPC  R0,R27
                 	.ENDM
                 
                 	.MACRO __CPD12
                 	CP   R30,R26
                 	CPC  R31,R27
                 	CPC  R22,R24
                 	CPC  R23,R25
                 	.ENDM
                 
                 	.MACRO __CPD21
                 	CP   R26,R30
                 	CPC  R27,R31
                 	CPC  R24,R22
                 	CPC  R25,R23
                 	.ENDM
                 
                 	.MACRO __BSTB1
                 	CLT
                 	TST  R30
                 	BREQ PC+2
                 	SET
                 	.ENDM
                 
                 	.MACRO __LNEGB1
                 	TST  R30
                 	LDI  R30,1
                 	BREQ PC+2
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __LNEGW1
                 	OR   R30,R31
                 	LDI  R30,1
                 	BREQ PC+2
                 	LDI  R30,0
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2M
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETW1Z
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CALL __GETD1Z
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETW2X
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __GETD2X
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0053 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 756e
000034 626d
000035 7265
000036 3d20      	.DB  0x6E,0x75,0x6D,0x62,0x65,0x72,0x20,0x3D
000037 2520
000038 0063
000039 756e
00003a 626d      	.DB  0x20,0x25,0x63,0x0,0x6E,0x75,0x6D,0x62
00003b 7265
00003c 3d20
00003d 2520
00003e 0064      	.DB  0x65,0x72,0x20,0x3D,0x20,0x25,0x64,0x0
00003f 756e
000040 626d
000041 7265
000042 312b      	.DB  0x6E,0x75,0x6D,0x62,0x65,0x72,0x2B,0x31
000043 3d20
000044 2520
000045 0063
000046 756e      	.DB  0x20,0x3D,0x20,0x25,0x63,0x0,0x6E,0x75
000047 626d
000048 7265
000049 2b20
00004a 2031      	.DB  0x6D,0x62,0x65,0x72,0x20,0x2B,0x31,0x20
00004b 203d
00004c 6425
E:\fourth_year\411\embeded\Abdo\myCode\4-Kmap-With_LCD\Debug\List\protuce.asm(1460): warning: .cseg .db misalignment - padding zero byte
00004d 0000      	.DB  0x3D,0x20,0x25,0x64,0x0
                 _0x2000003:
00004e c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00004f 0002      	.DW  0x02
000050 0160      	.DW  __base_y_G100
000051 009c      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000052 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000053 94f8      	CLI
000054 27ee      	CLR  R30
000055 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000056 e0f1      	LDI  R31,1
000057 bffb      	OUT  GICR,R31
000058 bfeb      	OUT  GICR,R30
000059 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00005a e08d      	LDI  R24,(14-2)+1
00005b e0a2      	LDI  R26,2
00005c 27bb      	CLR  R27
                 __CLEAR_REG:
00005d 93ed      	ST   X+,R30
00005e 958a      	DEC  R24
00005f f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000060 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000061 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000062 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000063 93ed      	ST   X+,R30
000064 9701      	SBIW R24,1
000065 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000066 e9ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000067 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000068 9185      	LPM  R24,Z+
000069 9195      	LPM  R25,Z+
00006a 9700      	SBIW R24,0
00006b f061      	BREQ __GLOBAL_INI_END
00006c 91a5      	LPM  R26,Z+
00006d 91b5      	LPM  R27,Z+
00006e 9005      	LPM  R0,Z+
00006f 9015      	LPM  R1,Z+
000070 01bf      	MOVW R22,R30
000071 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000072 9005      	LPM  R0,Z+
000073 920d      	ST   X+,R0
000074 9701      	SBIW R24,1
000075 f7e1      	BRNE __GLOBAL_INI_LOOP
000076 01fb      	MOVW R30,R22
000077 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000078 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000079 bfed      	OUT  SPL,R30
00007a e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00007b bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00007c e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00007d e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007e 940c 0080 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0x00
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;char Keypad();
                 ;void main(void)
                 ; 0000 000D {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000E 
                 ; 0000 000F char number;
                 ; 0000 0010 DDRC=0b00000111;
                 ;	number -> R17
000080 e0e7      	LDI  R30,LOW(7)
000081 bbe4      	OUT  0x14,R30
                 ; 0000 0011 PORTC=0b11111000;
000082 efe8      	LDI  R30,LOW(248)
000083 bbe5      	OUT  0x15,R30
                 ; 0000 0012 lcd_init(16);
000084 e1a0      	LDI  R26,LOW(16)
000085 d0e1      	RCALL _lcd_init
                 ; 0000 0013 
                 ; 0000 0014 while (1)
                 _0x3:
                 ; 0000 0015 {
                 ; 0000 0016 // Please write your application code here
                 ; 0000 0017 
                 ; 0000 0018 number=Keypad();
000086 d031      	RCALL _Keypad
000087 2f1e      	MOV  R17,R30
                 ; 0000 0019 lcd_clear();
000088 d0c1      	RCALL _lcd_clear
                 ; 0000 001A 
                 ; 0000 001B if(number=='*'||number=='#')   {
000089 321a      	CPI  R17,42
00008a f011      	BREQ _0x7
00008b 3213      	CPI  R17,35
00008c f419      	BRNE _0x6
                 _0x7:
                 ; 0000 001C lcd_printf("number = %c",number); }
                +
00008d e6e6     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
00008e e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
00008f c002      	RJMP _0x5D
                 ; 0000 001D else           {
                 _0x6:
                 ; 0000 001E lcd_printf("number = %d",number);
                +
000090 e7e2     +LDI R30 , LOW ( 2 * _0x0 + ( 12 ) )
000091 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 12 ) )
                 	__POINTW1FN _0x0,12
                 _0x5D:
000092 93fa      	ST   -Y,R31
000093 93ea      	ST   -Y,R30
000094 d273      	RCALL SUBOPT_0x0
000095 d2b5      	RCALL __PUTPARD1
000096 e084      	LDI  R24,4
000097 d230      	RCALL _lcd_printf
000098 9626      	ADIW R28,6
                 ; 0000 001F }
                 ; 0000 0020 
                 ; 0000 0021 lcd_gotoxy(0,1);
000099 e0e0      	LDI  R30,LOW(0)
00009a 93ea      	ST   -Y,R30
00009b e0a1      	LDI  R26,LOW(1)
00009c d09b      	RCALL _lcd_gotoxy
                 ; 0000 0022 if(number=='*'||number=='#')
00009d 321a      	CPI  R17,42
00009e f011      	BREQ _0xB
00009f 3213      	CPI  R17,35
0000a0 f431      	BRNE _0xA
                 _0xB:
                 ; 0000 0023 lcd_printf("number+1 = %c",number);
                +
0000a1 e7ee     +LDI R30 , LOW ( 2 * _0x0 + ( 24 ) )
0000a2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 24 ) )
                 	__POINTW1FN _0x0,24
0000a3 93fa      	ST   -Y,R31
0000a4 93ea      	ST   -Y,R30
0000a5 d262      	RCALL SUBOPT_0x0
0000a6 c00b      	RJMP _0x5E
                 ; 0000 0024 else
                 _0xA:
                 ; 0000 0025 lcd_printf("number +1 = %d",number+1);
                +
0000a7 e8ec     +LDI R30 , LOW ( 2 * _0x0 + ( 38 ) )
0000a8 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 38 ) )
                 	__POINTW1FN _0x0,38
0000a9 93fa      	ST   -Y,R31
0000aa 93ea      	ST   -Y,R30
0000ab 2fe1      	MOV  R30,R17
0000ac e0f0      	LDI  R31,0
0000ad 9631      	ADIW R30,1
                +
0000ae 2f6f     +MOV R22 , R31
0000af 0f66     +ADD R22 , R22
0000b0 0b66     +SBC R22 , R22
0000b1 2f76     +MOV R23 , R22
                 	__CWD1
                 _0x5E:
0000b2 d298      	RCALL __PUTPARD1
0000b3 e084      	LDI  R24,4
0000b4 d213      	RCALL _lcd_printf
0000b5 9626      	ADIW R28,6
                 ; 0000 0026 
                 ; 0000 0027 }
0000b6 cfcf      	RJMP _0x3
                 ; 0000 0028 }
                 _0xE:
0000b7 cfff      	RJMP _0xE
                 ; .FEND
                 ;char Keypad(){
                 ; 0000 002B char Keypad(){
                 _Keypad:
                 ; .FSTART _Keypad
                 ; 0000 002C 
                 ; 0000 002D while(1){
                 _0xF:
                 ; 0000 002E PORTC.0=0;
0000b8 98a8      	CBI  0x15,0
                 ; 0000 002F PORTC.1=1;
0000b9 9aa9      	SBI  0x15,1
                 ; 0000 0030 PORTC.2=1;
0000ba 9aaa      	SBI  0x15,2
                 ; 0000 0031 switch (PINC)
0000bb b3e3      	IN   R30,0x13
                 ; 0000 0032 {
                 ; 0000 0033 case 0b11110110:
0000bc 3fe6      	CPI  R30,LOW(0xF6)
0000bd f429      	BRNE _0x1B
                 ; 0000 0034 while (PINC.3==0) ;        //for debouncey
                 _0x1C:
0000be 9b9b      	SBIS 0x13,3
0000bf cffe      	RJMP _0x1C
                 ; 0000 0035 return 1;
0000c0 e0e1      	LDI  R30,LOW(1)
0000c1 9508      	RET
                 ; 0000 0036 
                 ; 0000 0037 break;
0000c2 c014      	RJMP _0x1A
                 ; 0000 0038 case  0b11101110:
                 _0x1B:
0000c3 3eee      	CPI  R30,LOW(0xEE)
0000c4 f429      	BRNE _0x1F
                 ; 0000 0039 while (PINC.4==0);
                 _0x20:
0000c5 9b9c      	SBIS 0x13,4
0000c6 cffe      	RJMP _0x20
                 ; 0000 003A return 4;
0000c7 e0e4      	LDI  R30,LOW(4)
0000c8 9508      	RET
                 ; 0000 003B break;
0000c9 c00d      	RJMP _0x1A
                 ; 0000 003C 
                 ; 0000 003D 
                 ; 0000 003E case  0b11011110:
                 _0x1F:
0000ca 3dee      	CPI  R30,LOW(0xDE)
0000cb f429      	BRNE _0x23
                 ; 0000 003F while (PINC.5==0);
                 _0x24:
0000cc 9b9d      	SBIS 0x13,5
0000cd cffe      	RJMP _0x24
                 ; 0000 0040 return 7;
0000ce e0e7      	LDI  R30,LOW(7)
0000cf 9508      	RET
                 ; 0000 0041 break;
0000d0 c006      	RJMP _0x1A
                 ; 0000 0042 case  0b10111110:
                 _0x23:
0000d1 3bee      	CPI  R30,LOW(0xBE)
0000d2 f421      	BRNE _0x1A
                 ; 0000 0043 while (PINC.6==0);
                 _0x28:
0000d3 9b9e      	SBIS 0x13,6
0000d4 cffe      	RJMP _0x28
                 ; 0000 0044 return '*';
0000d5 e2ea      	LDI  R30,LOW(42)
0000d6 9508      	RET
                 ; 0000 0045 break;
                 ; 0000 0046 }
                 _0x1A:
                 ; 0000 0047 
                 ; 0000 0048 
                 ; 0000 0049 PORTC.0=1;
0000d7 9aa8      	SBI  0x15,0
                 ; 0000 004A PORTC.1=0;
0000d8 98a9      	CBI  0x15,1
                 ; 0000 004B PORTC.2=1;
0000d9 9aaa      	SBI  0x15,2
                 ; 0000 004C switch (PINC)
0000da b3e3      	IN   R30,0x13
                 ; 0000 004D {
                 ; 0000 004E case  0b11110101:
0000db 3fe5      	CPI  R30,LOW(0xF5)
0000dc f429      	BRNE _0x34
                 ; 0000 004F while (PINC.3==0);
                 _0x35:
0000dd 9b9b      	SBIS 0x13,3
0000de cffe      	RJMP _0x35
                 ; 0000 0050 return 2;
0000df e0e2      	LDI  R30,LOW(2)
0000e0 9508      	RET
                 ; 0000 0051 break;
0000e1 c014      	RJMP _0x33
                 ; 0000 0052 
                 ; 0000 0053 case  0b11101101:
                 _0x34:
0000e2 3eed      	CPI  R30,LOW(0xED)
0000e3 f429      	BRNE _0x38
                 ; 0000 0054 while (PINC.4==0);
                 _0x39:
0000e4 9b9c      	SBIS 0x13,4
0000e5 cffe      	RJMP _0x39
                 ; 0000 0055 return 5;
0000e6 e0e5      	LDI  R30,LOW(5)
0000e7 9508      	RET
                 ; 0000 0056 break;
0000e8 c00d      	RJMP _0x33
                 ; 0000 0057 
                 ; 0000 0058 
                 ; 0000 0059 case 0b11011101:
                 _0x38:
0000e9 3ded      	CPI  R30,LOW(0xDD)
0000ea f429      	BRNE _0x3C
                 ; 0000 005A while (PINC.5==0);
                 _0x3D:
0000eb 9b9d      	SBIS 0x13,5
0000ec cffe      	RJMP _0x3D
                 ; 0000 005B return 8;
0000ed e0e8      	LDI  R30,LOW(8)
0000ee 9508      	RET
                 ; 0000 005C break;
0000ef c006      	RJMP _0x33
                 ; 0000 005D case  0b10111101:
                 _0x3C:
0000f0 3bed      	CPI  R30,LOW(0xBD)
0000f1 f421      	BRNE _0x33
                 ; 0000 005E while (PINC.6==0) ;
                 _0x41:
0000f2 9b9e      	SBIS 0x13,6
0000f3 cffe      	RJMP _0x41
                 ; 0000 005F return 0;
0000f4 e0e0      	LDI  R30,LOW(0)
0000f5 9508      	RET
                 ; 0000 0060 break;
                 ; 0000 0061 }
                 _0x33:
                 ; 0000 0062 
                 ; 0000 0063 
                 ; 0000 0064 PORTC.0=1;
0000f6 9aa8      	SBI  0x15,0
                 ; 0000 0065 PORTC.1=1;
0000f7 9aa9      	SBI  0x15,1
                 ; 0000 0066 PORTC.2=0;
0000f8 98aa      	CBI  0x15,2
                 ; 0000 0067 switch (PINC)
0000f9 b3e3      	IN   R30,0x13
                 ; 0000 0068 {
                 ; 0000 0069 case  0b11110011:
0000fa 3fe3      	CPI  R30,LOW(0xF3)
0000fb f429      	BRNE _0x4D
                 ; 0000 006A while (PINC.3==0);
                 _0x4E:
0000fc 9b9b      	SBIS 0x13,3
0000fd cffe      	RJMP _0x4E
                 ; 0000 006B return 3;
0000fe e0e3      	LDI  R30,LOW(3)
0000ff 9508      	RET
                 ; 0000 006C break;
000100 c014      	RJMP _0x4C
                 ; 0000 006D 
                 ; 0000 006E case  0b11101011:
                 _0x4D:
000101 3eeb      	CPI  R30,LOW(0xEB)
000102 f429      	BRNE _0x51
                 ; 0000 006F while (PINC.4==0) ;
                 _0x52:
000103 9b9c      	SBIS 0x13,4
000104 cffe      	RJMP _0x52
                 ; 0000 0070 return 6;
000105 e0e6      	LDI  R30,LOW(6)
000106 9508      	RET
                 ; 0000 0071 break;
000107 c00d      	RJMP _0x4C
                 ; 0000 0072 
                 ; 0000 0073 
                 ; 0000 0074 case  0b11011011:
                 _0x51:
000108 3deb      	CPI  R30,LOW(0xDB)
000109 f429      	BRNE _0x55
                 ; 0000 0075 while (PINC.5==0) ;
                 _0x56:
00010a 9b9d      	SBIS 0x13,5
00010b cffe      	RJMP _0x56
                 ; 0000 0076 return 9;
00010c e0e9      	LDI  R30,LOW(9)
00010d 9508      	RET
                 ; 0000 0077 break;
00010e c006      	RJMP _0x4C
                 ; 0000 0078 case  0b10111011:
                 _0x55:
00010f 3beb      	CPI  R30,LOW(0xBB)
000110 f421      	BRNE _0x4C
                 ; 0000 0079 while (PINC.6==0);
                 _0x5A:
000111 9b9e      	SBIS 0x13,6
000112 cffe      	RJMP _0x5A
                 ; 0000 007A return '#';
000113 e2e3      	LDI  R30,LOW(35)
000114 9508      	RET
                 ; 0000 007B break;
                 ; 0000 007C }
                 _0x4C:
                 ; 0000 007D }
000115 cfa2      	RJMP _0xF
                 ; 0000 007E }
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000116 931a      	ST   -Y,R17
000117 2f1a      	MOV  R17,R26
000118 b3eb      	IN   R30,0x1B
000119 70ef      	ANDI R30,LOW(0xF)
00011a 2fae      	MOV  R26,R30
00011b 2fe1      	MOV  R30,R17
00011c 7fe0      	ANDI R30,LOW(0xF0)
00011d 2bea      	OR   R30,R26
00011e bbeb      	OUT  0x1B,R30
                +
00011f e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000120 958a     +DEC R24
000121 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000122 9ada      	SBI  0x1B,2
                +
000123 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000124 958a     +DEC R24
000125 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000126 98da      	CBI  0x1B,2
                +
000127 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000128 958a     +DEC R24
000129 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00012a c065      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00012b 93aa      	ST   -Y,R26
00012c 81a8      	LD   R26,Y
00012d dfe8      	RCALL __lcd_write_nibble_G100
00012e 81e8          ld    r30,y
00012f 95e2          swap  r30
000130 83e8          st    y,r30
000131 81a8      	LD   R26,Y
000132 dfe3      	RCALL __lcd_write_nibble_G100
                +
000133 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000134 958a     +DEC R24
000135 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000136 9621      	ADIW R28,1
000137 9508      	RET
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000138 931a      	ST   -Y,R17
000139 930a      	ST   -Y,R16
00013a 2f1a      	MOV  R17,R26
00013b 810a      	LDD  R16,Y+2
00013c 2fe1      	MOV  R30,R17
00013d e0f0      	LDI  R31,0
00013e 5ae0      	SUBI R30,LOW(-__base_y_G100)
00013f 4ffe      	SBCI R31,HIGH(-__base_y_G100)
000140 81e0      	LD   R30,Z
000141 0fe0      	ADD  R30,R16
000142 2fae      	MOV  R26,R30
000143 dfe7      	RCALL __lcd_write_data
000144 2e50      	MOV  R5,R16
000145 2e41      	MOV  R4,R17
000146 8119      	LDD  R17,Y+1
000147 8108      	LDD  R16,Y+0
000148 9623      	ADIW R28,3
000149 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00014a e0a2      	LDI  R26,LOW(2)
00014b d1c1      	RCALL SUBOPT_0x1
00014c e0ac      	LDI  R26,LOW(12)
00014d dfdd      	RCALL __lcd_write_data
00014e e0a1      	LDI  R26,LOW(1)
00014f d1bd      	RCALL SUBOPT_0x1
000150 e0e0      	LDI  R30,LOW(0)
000151 2e4e      	MOV  R4,R30
000152 2e5e      	MOV  R5,R30
000153 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000154 931a      	ST   -Y,R17
000155 2f1a      	MOV  R17,R26
000156 301a      	CPI  R17,10
000157 f011      	BREQ _0x2000005
000158 1457      	CP   R5,R7
000159 f038      	BRLO _0x2000004
                 _0x2000005:
00015a e0e0      	LDI  R30,LOW(0)
00015b 93ea      	ST   -Y,R30
00015c 9443      	INC  R4
00015d 2da4      	MOV  R26,R4
00015e dfd9      	RCALL _lcd_gotoxy
00015f 301a      	CPI  R17,10
000160 f179      	BREQ _0x2080001
                 _0x2000004:
000161 9453      	INC  R5
000162 9ad8      	SBI  0x1B,0
000163 2fa1      	MOV  R26,R17
000164 dfc6      	RCALL __lcd_write_data
000165 98d8      	CBI  0x1B,0
000166 c029      	RJMP _0x2080001
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000167 931a      	ST   -Y,R17
000168 2f1a      	MOV  R17,R26
000169 b3ea      	IN   R30,0x1A
00016a 6fe0      	ORI  R30,LOW(0xF0)
00016b bbea      	OUT  0x1A,R30
00016c 9ad2      	SBI  0x1A,2
00016d 9ad0      	SBI  0x1A,0
00016e 9ad1      	SBI  0x1A,1
00016f 98da      	CBI  0x1B,2
000170 98d8      	CBI  0x1B,0
000171 98d9      	CBI  0x1B,1
000172 2e71      	MOV  R7,R17
000173 2fe1      	MOV  R30,R17
000174 58e0      	SUBI R30,-LOW(128)
                +
000175 93e0 0162+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000177 2fe1      	MOV  R30,R17
000178 54e0      	SUBI R30,-LOW(192)
                +
000179 93e0 0163+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
00017b e1a4      	LDI  R26,LOW(20)
00017c e0b0      	LDI  R27,0
00017d d1d2      	RCALL _delay_ms
00017e d192      	RCALL SUBOPT_0x2
00017f d191      	RCALL SUBOPT_0x2
000180 d190      	RCALL SUBOPT_0x2
000181 e2a0      	LDI  R26,LOW(32)
000182 df93      	RCALL __lcd_write_nibble_G100
                +
000183 ec88     +LDI R24 , LOW ( 200 )
000184 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000185 9701     +SBIW R24 , 1
000186 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000187 e2a8      	LDI  R26,LOW(40)
000188 dfa2      	RCALL __lcd_write_data
000189 e0a4      	LDI  R26,LOW(4)
00018a dfa0      	RCALL __lcd_write_data
00018b e8a5      	LDI  R26,LOW(133)
00018c df9e      	RCALL __lcd_write_data
00018d e0a6      	LDI  R26,LOW(6)
00018e df9c      	RCALL __lcd_write_data
00018f dfba      	RCALL _lcd_clear
                 _0x2080001:
000190 9119      	LD   R17,Y+
000191 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 __print_G101:
                 ; .FSTART __print_G101
000192 93ba      	ST   -Y,R27
000193 93aa      	ST   -Y,R26
000194 9726      	SBIW R28,6
000195 d19f      	RCALL __SAVELOCR6
000196 e010      	LDI  R17,0
000197 85ac      	LDD  R26,Y+12
000198 85bd      	LDD  R27,Y+12+1
000199 e0e0      	LDI  R30,LOW(0)
00019a e0f0      	LDI  R31,HIGH(0)
00019b 93ed      	ST   X+,R30
00019c 93fc      	ST   X,R31
                 _0x2020016:
00019d 89ea      	LDD  R30,Y+18
00019e 89fb      	LDD  R31,Y+18+1
00019f 9631      	ADIW R30,1
0001a0 8bea      	STD  Y+18,R30
0001a1 8bfb      	STD  Y+18+1,R31
0001a2 9731      	SBIW R30,1
0001a3 91e4      	LPM  R30,Z
0001a4 2f2e      	MOV  R18,R30
0001a5 30e0      	CPI  R30,0
0001a6 f409      	BRNE PC+2
0001a7 c10b      	RJMP _0x2020018
0001a8 2fe1      	MOV  R30,R17
0001a9 30e0      	CPI  R30,0
0001aa f431      	BRNE _0x202001C
0001ab 3225      	CPI  R18,37
0001ac f411      	BRNE _0x202001D
0001ad e011      	LDI  R17,LOW(1)
0001ae c001      	RJMP _0x202001E
                 _0x202001D:
0001af d168      	RCALL SUBOPT_0x3
                 _0x202001E:
0001b0 c101      	RJMP _0x202001B
                 _0x202001C:
0001b1 30e1      	CPI  R30,LOW(0x1)
0001b2 f4a1      	BRNE _0x202001F
0001b3 3225      	CPI  R18,37
0001b4 f411      	BRNE _0x2020020
0001b5 d162      	RCALL SUBOPT_0x3
0001b6 c0fa      	RJMP _0x20200CC
                 _0x2020020:
0001b7 e012      	LDI  R17,LOW(2)
0001b8 e040      	LDI  R20,LOW(0)
0001b9 e000      	LDI  R16,LOW(0)
0001ba 322d      	CPI  R18,45
0001bb f411      	BRNE _0x2020021
0001bc e001      	LDI  R16,LOW(1)
0001bd c0f4      	RJMP _0x202001B
                 _0x2020021:
0001be 322b      	CPI  R18,43
0001bf f411      	BRNE _0x2020022
0001c0 e24b      	LDI  R20,LOW(43)
0001c1 c0f0      	RJMP _0x202001B
                 _0x2020022:
0001c2 3220      	CPI  R18,32
0001c3 f411      	BRNE _0x2020023
0001c4 e240      	LDI  R20,LOW(32)
0001c5 c0ec      	RJMP _0x202001B
                 _0x2020023:
0001c6 c002      	RJMP _0x2020024
                 _0x202001F:
0001c7 30e2      	CPI  R30,LOW(0x2)
0001c8 f439      	BRNE _0x2020025
                 _0x2020024:
0001c9 e050      	LDI  R21,LOW(0)
0001ca e013      	LDI  R17,LOW(3)
0001cb 3320      	CPI  R18,48
0001cc f411      	BRNE _0x2020026
0001cd 6800      	ORI  R16,LOW(128)
0001ce c0e3      	RJMP _0x202001B
                 _0x2020026:
0001cf c003      	RJMP _0x2020027
                 _0x2020025:
0001d0 30e3      	CPI  R30,LOW(0x3)
0001d1 f009      	BREQ PC+2
0001d2 c0df      	RJMP _0x202001B
                 _0x2020027:
0001d3 3320      	CPI  R18,48
0001d4 f010      	BRLO _0x202002A
0001d5 332a      	CPI  R18,58
0001d6 f008      	BRLO _0x202002B
                 _0x202002A:
0001d7 c007      	RJMP _0x2020029
                 _0x202002B:
0001d8 e0aa      	LDI  R26,LOW(10)
0001d9 9f5a      	MUL  R21,R26
0001da 2d50      	MOV  R21,R0
0001db 2fe2      	MOV  R30,R18
0001dc 53e0      	SUBI R30,LOW(48)
0001dd 0f5e      	ADD  R21,R30
0001de c0d3      	RJMP _0x202001B
                 _0x2020029:
0001df 2fe2      	MOV  R30,R18
0001e0 36e3      	CPI  R30,LOW(0x63)
0001e1 f439      	BRNE _0x202002F
0001e2 d13c      	RCALL SUBOPT_0x4
0001e3 89e8      	LDD  R30,Y+16
0001e4 89f9      	LDD  R31,Y+16+1
0001e5 81a4      	LDD  R26,Z+4
0001e6 93aa      	ST   -Y,R26
0001e7 d13d      	RCALL SUBOPT_0x5
0001e8 c0c8      	RJMP _0x2020030
                 _0x202002F:
0001e9 37e3      	CPI  R30,LOW(0x73)
0001ea f429      	BRNE _0x2020032
0001eb d133      	RCALL SUBOPT_0x4
0001ec d13e      	RCALL SUBOPT_0x6
0001ed d101      	RCALL _strlen
0001ee 2f1e      	MOV  R17,R30
0001ef c007      	RJMP _0x2020033
                 _0x2020032:
0001f0 37e0      	CPI  R30,LOW(0x70)
0001f1 f449      	BRNE _0x2020035
0001f2 d12c      	RCALL SUBOPT_0x4
0001f3 d137      	RCALL SUBOPT_0x6
0001f4 d106      	RCALL _strlenf
0001f5 2f1e      	MOV  R17,R30
0001f6 6008      	ORI  R16,LOW(8)
                 _0x2020033:
0001f7 6002      	ORI  R16,LOW(2)
0001f8 770f      	ANDI R16,LOW(127)
0001f9 e030      	LDI  R19,LOW(0)
0001fa c03a      	RJMP _0x2020036
                 _0x2020035:
0001fb 36e4      	CPI  R30,LOW(0x64)
0001fc f011      	BREQ _0x2020039
0001fd 36e9      	CPI  R30,LOW(0x69)
0001fe f411      	BRNE _0x202003A
                 _0x2020039:
0001ff 6004      	ORI  R16,LOW(4)
000200 c002      	RJMP _0x202003B
                 _0x202003A:
000201 37e5      	CPI  R30,LOW(0x75)
000202 f431      	BRNE _0x202003C
                 _0x202003B:
000203 e5e4      	LDI  R30,LOW(_tbl10_G101*2)
000204 e0f0      	LDI  R31,HIGH(_tbl10_G101*2)
000205 83ee      	STD  Y+6,R30
000206 83ff      	STD  Y+6+1,R31
000207 e015      	LDI  R17,LOW(5)
000208 c00c      	RJMP _0x202003D
                 _0x202003C:
000209 35e8      	CPI  R30,LOW(0x58)
00020a f411      	BRNE _0x202003F
00020b 6008      	ORI  R16,LOW(8)
00020c c003      	RJMP _0x2020040
                 _0x202003F:
00020d 37e8      	CPI  R30,LOW(0x78)
00020e f009      	BREQ PC+2
00020f c0a1      	RJMP _0x2020071
                 _0x2020040:
000210 e5ee      	LDI  R30,LOW(_tbl16_G101*2)
000211 e0f0      	LDI  R31,HIGH(_tbl16_G101*2)
000212 83ee      	STD  Y+6,R30
000213 83ff      	STD  Y+6+1,R31
000214 e014      	LDI  R17,LOW(4)
                 _0x202003D:
000215 ff02      	SBRS R16,2
000216 c015      	RJMP _0x2020042
000217 d107      	RCALL SUBOPT_0x4
000218 89a8      	LDD  R26,Y+16
000219 89b9      	LDD  R27,Y+16+1
00021a 9614      	ADIW R26,4
00021b 91ed      	LD   R30,X+
00021c 91fd      	LD   R31,X+
00021d 87ea      	STD  Y+10,R30
00021e 87fb      	STD  Y+10+1,R31
00021f 85ab      	LDD  R26,Y+11
000220 23aa      	TST  R26
000221 f422      	BRPL _0x2020043
000222 d120      	RCALL __ANEGW1
000223 87ea      	STD  Y+10,R30
000224 87fb      	STD  Y+10+1,R31
000225 e24d      	LDI  R20,LOW(45)
                 _0x2020043:
000226 3040      	CPI  R20,0
000227 f011      	BREQ _0x2020044
000228 5f1f      	SUBI R17,-LOW(1)
000229 c001      	RJMP _0x2020045
                 _0x2020044:
00022a 7f0b      	ANDI R16,LOW(251)
                 _0x2020045:
00022b c009      	RJMP _0x2020046
                 _0x2020042:
00022c d0f2      	RCALL SUBOPT_0x4
00022d 89a8      	LDD  R26,Y+16
00022e 89b9      	LDD  R27,Y+16+1
00022f 9614      	ADIW R26,4
                +
000230 91ed     +LD R30 , X +
000231 91fc     +LD R31 , X
000232 9711     +SBIW R26 , 1
                 	__GETW1P
000233 87ea      	STD  Y+10,R30
000234 87fb      	STD  Y+10+1,R31
                 _0x2020046:
                 _0x2020036:
000235 fd00      	SBRC R16,0
000236 c010      	RJMP _0x2020047
                 _0x2020048:
000237 1715      	CP   R17,R21
000238 f470      	BRSH _0x202004A
000239 ff07      	SBRS R16,7
00023a c008      	RJMP _0x202004B
00023b ff02      	SBRS R16,2
00023c c004      	RJMP _0x202004C
00023d 7f0b      	ANDI R16,LOW(251)
00023e 2f24      	MOV  R18,R20
00023f 5011      	SUBI R17,LOW(1)
000240 c001      	RJMP _0x202004D
                 _0x202004C:
000241 e320      	LDI  R18,LOW(48)
                 _0x202004D:
000242 c001      	RJMP _0x202004E
                 _0x202004B:
000243 e220      	LDI  R18,LOW(32)
                 _0x202004E:
000244 d0d3      	RCALL SUBOPT_0x3
000245 5051      	SUBI R21,LOW(1)
000246 cff0      	RJMP _0x2020048
                 _0x202004A:
                 _0x2020047:
000247 2f31      	MOV  R19,R17
000248 ff01      	SBRS R16,1
000249 c016      	RJMP _0x202004F
                 _0x2020050:
00024a 3030      	CPI  R19,0
00024b f099      	BREQ _0x2020052
00024c ff03      	SBRS R16,3
00024d c006      	RJMP _0x2020053
00024e 81ee      	LDD  R30,Y+6
00024f 81ff      	LDD  R31,Y+6+1
000250 9125      	LPM  R18,Z+
000251 83ee      	STD  Y+6,R30
000252 83ff      	STD  Y+6+1,R31
000253 c005      	RJMP _0x2020054
                 _0x2020053:
000254 81ae      	LDD  R26,Y+6
000255 81bf      	LDD  R27,Y+6+1
000256 912d      	LD   R18,X+
000257 83ae      	STD  Y+6,R26
000258 83bf      	STD  Y+6+1,R27
                 _0x2020054:
000259 d0be      	RCALL SUBOPT_0x3
00025a 3050      	CPI  R21,0
00025b f009      	BREQ _0x2020055
00025c 5051      	SUBI R21,LOW(1)
                 _0x2020055:
00025d 5031      	SUBI R19,LOW(1)
00025e cfeb      	RJMP _0x2020050
                 _0x2020052:
00025f c048      	RJMP _0x2020056
                 _0x202004F:
                 _0x2020058:
000260 e320      	LDI  R18,LOW(48)
000261 81ee      	LDD  R30,Y+6
000262 81ff      	LDD  R31,Y+6+1
000263 d0e3      	RCALL __GETW1PF
000264 87e8      	STD  Y+8,R30
000265 87f9      	STD  Y+8+1,R31
000266 81ee      	LDD  R30,Y+6
000267 81ff      	LDD  R31,Y+6+1
000268 9632      	ADIW R30,2
000269 83ee      	STD  Y+6,R30
00026a 83ff      	STD  Y+6+1,R31
                 _0x202005A:
00026b 85e8      	LDD  R30,Y+8
00026c 85f9      	LDD  R31,Y+8+1
00026d 85aa      	LDD  R26,Y+10
00026e 85bb      	LDD  R27,Y+10+1
00026f 17ae      	CP   R26,R30
000270 07bf      	CPC  R27,R31
000271 f050      	BRLO _0x202005C
000272 5f2f      	SUBI R18,-LOW(1)
000273 85a8      	LDD  R26,Y+8
000274 85b9      	LDD  R27,Y+8+1
000275 85ea      	LDD  R30,Y+10
000276 85fb      	LDD  R31,Y+10+1
000277 1bea      	SUB  R30,R26
000278 0bfb      	SBC  R31,R27
000279 87ea      	STD  Y+10,R30
00027a 87fb      	STD  Y+10+1,R31
00027b cfef      	RJMP _0x202005A
                 _0x202005C:
00027c 332a      	CPI  R18,58
00027d f028      	BRLO _0x202005D
00027e ff03      	SBRS R16,3
00027f c002      	RJMP _0x202005E
000280 5f29      	SUBI R18,-LOW(7)
000281 c001      	RJMP _0x202005F
                 _0x202005E:
000282 5d29      	SUBI R18,-LOW(39)
                 _0x202005F:
                 _0x202005D:
000283 fd04      	SBRC R16,4
000284 c019      	RJMP _0x2020061
000285 3321      	CPI  R18,49
000286 f420      	BRSH _0x2020063
000287 85a8      	LDD  R26,Y+8
000288 85b9      	LDD  R27,Y+8+1
000289 9711      	SBIW R26,1
00028a f409      	BRNE _0x2020062
                 _0x2020063:
00028b c009      	RJMP _0x20200CD
                 _0x2020062:
00028c 1753      	CP   R21,R19
00028d f010      	BRLO _0x2020067
00028e ff00      	SBRS R16,0
00028f c001      	RJMP _0x2020068
                 _0x2020067:
000290 c011      	RJMP _0x2020066
                 _0x2020068:
000291 e220      	LDI  R18,LOW(32)
000292 ff07      	SBRS R16,7
000293 c00a      	RJMP _0x2020069
000294 e320      	LDI  R18,LOW(48)
                 _0x20200CD:
000295 6100      	ORI  R16,LOW(16)
000296 ff02      	SBRS R16,2
000297 c006      	RJMP _0x202006A
000298 7f0b      	ANDI R16,LOW(251)
000299 934a      	ST   -Y,R20
00029a d08a      	RCALL SUBOPT_0x5
00029b 3050      	CPI  R21,0
00029c f009      	BREQ _0x202006B
00029d 5051      	SUBI R21,LOW(1)
                 _0x202006B:
                 _0x202006A:
                 _0x2020069:
                 _0x2020061:
00029e d079      	RCALL SUBOPT_0x3
00029f 3050      	CPI  R21,0
0002a0 f009      	BREQ _0x202006C
0002a1 5051      	SUBI R21,LOW(1)
                 _0x202006C:
                 _0x2020066:
0002a2 5031      	SUBI R19,LOW(1)
0002a3 85a8      	LDD  R26,Y+8
0002a4 85b9      	LDD  R27,Y+8+1
0002a5 9712      	SBIW R26,2
0002a6 f008      	BRLO _0x2020059
0002a7 cfb8      	RJMP _0x2020058
                 _0x2020059:
                 _0x2020056:
0002a8 ff00      	SBRS R16,0
0002a9 c007      	RJMP _0x202006D
                 _0x202006E:
0002aa 3050      	CPI  R21,0
0002ab f029      	BREQ _0x2020070
0002ac 5051      	SUBI R21,LOW(1)
0002ad e2e0      	LDI  R30,LOW(32)
0002ae 93ea      	ST   -Y,R30
0002af d075      	RCALL SUBOPT_0x5
0002b0 cff9      	RJMP _0x202006E
                 _0x2020070:
                 _0x202006D:
                 _0x2020071:
                 _0x2020030:
                 _0x20200CC:
0002b1 e010      	LDI  R17,LOW(0)
                 _0x202001B:
0002b2 ceea      	RJMP _0x2020016
                 _0x2020018:
0002b3 85ac      	LDD  R26,Y+12
0002b4 85bd      	LDD  R27,Y+12+1
0002b5 91ed      	LD   R30,X+
0002b6 91fd      	LD   R31,X+
0002b7 d084      	RCALL __LOADLOCR6
0002b8 9664      	ADIW R28,20
0002b9 9508      	RET
                 ; .FEND
                 _put_lcd_G101:
                 ; .FSTART _put_lcd_G101
0002ba d07c      	RCALL __SAVELOCR4
0002bb 018d      	MOVW R16,R26
0002bc 813c      	LDD  R19,Y+4
0002bd 2fa3      	MOV  R26,R19
0002be de95      	RCALL _lcd_putchar
0002bf 01d8      	MOVW R26,R16
0002c0 91ed      	LD   R30,X+
0002c1 91fd      	LD   R31,X+
0002c2 9631      	ADIW R30,1
0002c3 93fe      	ST   -X,R31
0002c4 93ee      	ST   -X,R30
0002c5 d078      	RCALL __LOADLOCR4
0002c6 9625      	ADIW R28,5
0002c7 9508      	RET
                 ; .FEND
                 _lcd_printf:
                 ; .FSTART _lcd_printf
0002c8 92ff      	PUSH R15
0002c9 2ef8      	MOV  R15,R24
0002ca 9726      	SBIW R28,6
0002cb 931a      	ST   -Y,R17
0002cc 930a      	ST   -Y,R16
0002cd 01de      	MOVW R26,R28
0002ce 9614      	ADIW R26,4
                +
0002cf 2400     +CLR R0
0002d0 0daf     +ADD R26 , R15
0002d1 1db0     +ADC R27 , R0
                 	__ADDW2R15
0002d2 018d      	MOVW R16,R26
0002d3 e0e0      	LDI  R30,LOW(0)
0002d4 83ec      	STD  Y+4,R30
0002d5 83ed      	STD  Y+4+1,R30
0002d6 83ee      	STD  Y+6,R30
0002d7 83ef      	STD  Y+6+1,R30
0002d8 01de      	MOVW R26,R28
0002d9 9618      	ADIW R26,8
                +
0002da 2400     +CLR R0
0002db 0daf     +ADD R26 , R15
0002dc 1db0     +ADC R27 , R0
                 	__ADDW2R15
0002dd 91ed      	LD   R30,X+
0002de 91fd      	LD   R31,X+
0002df 93fa      	ST   -Y,R31
0002e0 93ea      	ST   -Y,R30
0002e1 931a      	ST   -Y,R17
0002e2 930a      	ST   -Y,R16
0002e3 ebea      	LDI  R30,LOW(_put_lcd_G101)
0002e4 e0f2      	LDI  R31,HIGH(_put_lcd_G101)
0002e5 93fa      	ST   -Y,R31
0002e6 93ea      	ST   -Y,R30
0002e7 01de      	MOVW R26,R28
0002e8 9618      	ADIW R26,8
0002e9 dea8      	RCALL __print_G101
0002ea 8119      	LDD  R17,Y+1
0002eb 8108      	LDD  R16,Y+0
0002ec 9628      	ADIW R28,8
0002ed 90ff      	POP  R15
0002ee 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
0002ef 93ba      	ST   -Y,R27
0002f0 93aa      	ST   -Y,R26
0002f1 91a9          ld   r26,y+
0002f2 91b9          ld   r27,y+
0002f3 27ee          clr  r30
0002f4 27ff          clr  r31
                 strlen0:
0002f5 916d          ld   r22,x+
0002f6 2366          tst  r22
0002f7 f011          breq strlen1
0002f8 9631          adiw r30,1
0002f9 cffb          rjmp strlen0
                 strlen1:
0002fa 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0002fb 93ba      	ST   -Y,R27
0002fc 93aa      	ST   -Y,R26
0002fd 27aa          clr  r26
0002fe 27bb          clr  r27
0002ff 91e9          ld   r30,y+
000300 91f9          ld   r31,y+
                 strlenf0:
000301 9005      	lpm  r0,z+
000302 2000          tst  r0
000303 f011          breq strlenf1
000304 9611          adiw r26,1
000305 cffb          rjmp strlenf0
                 strlenf1:
000306 01fd          movw r30,r26
000307 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 __base_y_G100:
000160           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
000308 2fe1      	MOV  R30,R17
000309 27ff      	CLR  R31
00030a 2766      	CLR  R22
00030b 2777      	CLR  R23
00030c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
00030d de1d      	RCALL __lcd_write_data
00030e e0a3      	LDI  R26,LOW(3)
00030f e0b0      	LDI  R27,0
000310 c03f      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2:
000311 e3a0      	LDI  R26,LOW(48)
000312 de03      	RCALL __lcd_write_nibble_G100
                +
000313 ec88     +LDI R24 , LOW ( 200 )
000314 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000315 9701     +SBIW R24 , 1
000316 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000317 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x3:
000318 932a      	ST   -Y,R18
000319 85ad      	LDD  R26,Y+13
00031a 85be      	LDD  R27,Y+13+1
00031b 85ef      	LDD  R30,Y+15
00031c 89f8      	LDD  R31,Y+15+1
00031d 9509      	ICALL
00031e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x4:
00031f 89e8      	LDD  R30,Y+16
000320 89f9      	LDD  R31,Y+16+1
000321 9734      	SBIW R30,4
000322 8be8      	STD  Y+16,R30
000323 8bf9      	STD  Y+16+1,R31
000324 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
000325 85ad      	LDD  R26,Y+13
000326 85be      	LDD  R27,Y+13+1
000327 85ef      	LDD  R30,Y+15
000328 89f8      	LDD  R31,Y+15+1
000329 9509      	ICALL
00032a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
00032b 89a8      	LDD  R26,Y+16
00032c 89b9      	LDD  R27,Y+16+1
00032d 9614      	ADIW R26,4
00032e 91ed      	LD   R30,X+
00032f 91fd      	LD   R31,X+
000330 83ee      	STD  Y+6,R30
000331 83ff      	STD  Y+6+1,R31
000332 81ae      	LDD  R26,Y+6
000333 81bf      	LDD  R27,Y+6+1
000334 9508      	RET
                 
                 ;RUNTIME LIBRARY
                 
                 	.CSEG
                 __SAVELOCR6:
000335 935a      	ST   -Y,R21
                 __SAVELOCR5:
000336 934a      	ST   -Y,R20
                 __SAVELOCR4:
000337 933a      	ST   -Y,R19
                 __SAVELOCR3:
000338 932a      	ST   -Y,R18
                 __SAVELOCR2:
000339 931a      	ST   -Y,R17
00033a 930a      	ST   -Y,R16
00033b 9508      	RET
                 
                 __LOADLOCR6:
00033c 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00033d 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00033e 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00033f 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000340 8119      	LDD  R17,Y+1
000341 8108      	LD   R16,Y
000342 9508      	RET
                 
                 __ANEGW1:
000343 95f1      	NEG  R31
000344 95e1      	NEG  R30
000345 40f0      	SBCI R31,0
000346 9508      	RET
                 
                 __GETW1PF:
000347 9005      	LPM  R0,Z+
000348 91f4      	LPM  R31,Z
000349 2de0      	MOV  R30,R0
00034a 9508      	RET
                 
                 __PUTPARD1:
00034b 937a      	ST   -Y,R23
00034c 936a      	ST   -Y,R22
00034d 93fa      	ST   -Y,R31
00034e 93ea      	ST   -Y,R30
00034f 9508      	RET
                 
                 _delay_ms:
000350 9610      	adiw r26,0
000351 f039      	breq __delay_ms1
                 __delay_ms0:
000352 95a8      	wdr
                +
000353 ed80     +LDI R24 , LOW ( 0x7D0 )
000354 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000355 9701     +SBIW R24 , 1
000356 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000357 9711      	sbiw r26,1
000358 f7c9      	brne __delay_ms0
                 __delay_ms1:
000359 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  13 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   5 
r16:  37 r17:  45 r18:  27 r19:  10 r20:   9 r21:  17 r22:  12 r23:   3 
r24:  24 r25:   5 r26:  77 r27:  27 r28:  13 r29:   1 r30: 166 r31:  59 
x  :  21 y  : 140 z  :  14 
Registers used: 25 out of 35 (71.4%)

ATmega16 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   5 
adiw  :  20 and   :   0 andi  :   6 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  17 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   0 brmi  :   0 brne  :  42 brpl  :   1 brsh  :   2 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   0 
cbi   :   8 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :  11 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   4 cpc   :   1 cpi   :  47 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   2 ijmp  :   0 
in    :   5 inc   :   2 jmp   :  22 ld    :  24 ldd   :  59 ldi   :  97 
lds   :   0 lpm   :  14 lsl   :   0 lsr   :   0 mov   :  34 movw  :  10 
mul   :   1 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   1 
ori   :   7 out   :  10 pop   :   1 push  :   1 rcall :  55 ret   :  33 
reti  :   0 rjmp  :  79 rol   :   0 ror   :   0 sbc   :   2 sbci  :   2 
sbi   :  11 sbic  :   0 sbis  :  12 sbiw  :  14 sbr   :   0 sbrc  :   2 
sbrs  :  10 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  50 std   :  30 sts   :   2 sub   :   1 subi  :  16 swap  :   1 
tst   :   3 wdr   :   1 
Instructions used: 51 out of 116 (44.0%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0006b4   1634     82   1716   16384  10.5%
[.dseg] 0x000060 0x000164      0      4      4    1024   0.4%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
